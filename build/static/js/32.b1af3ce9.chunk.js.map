{"version":3,"sources":["../node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/identifiers.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/eq.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js","../../src/index.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/neq.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js","../../src/TransportWebUSB.js","../../src/hid-framing.js","../node_modules/@ledgerhq/devices/node_modules/semver/index.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/valid.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/clean.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/inc.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/diff.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/major.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/minor.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/patch.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/prerelease.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/rcompare.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-loose.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/sort.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/rsort.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/coerce.js","../node_modules/lru-cache/index.js","../node_modules/yallist/yallist.js","../node_modules/yallist/iterator.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/to-comparators.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/max-satisfying.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-satisfying.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-version.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/valid.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/gtr.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/ltr.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/intersects.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/simplify.js","../node_modules/@ledgerhq/devices/node_modules/semver/ranges/subset.js","../../src/webusb.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js","../node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js","../node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js","../node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js"],"names":["MAX_SAFE_INTEGER","Number","module","exports","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_COMPONENT_LENGTH","debug","process","NODE_DEBUG","test","args","console","error","opts","options","loose","filter","k","reduce","compare","require","a","b","ANY","Symbol","Comparator","comp","parseOptions","value","this","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","TypeError","undefined","SemVer","er","cmp","includePrerelease","Range","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","range","numeric","compareIdentifiers","anum","bnum","rcompareIdentifiers","versionA","versionB","compareBuild","satisfies","gt","lt","lte","gte","hilo","gtfn","ltefn","ltfn","ecomp","i","comparators","set","high","low","forEach","comparator","length","devices","blue","id","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","blockSize","getBlockSize","_firwareVersion","nanoS","firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","devicesList","Object","ledgerUSBVendorId","identifyUSBProductId","usbProductId","legacy","d","mm","bluetoothServices","serviceUuidToInfos","deviceModel","spec","eq","neq","op","constructor","device","channel","Math","packetSize","interfaceNumber","e","apdu","log","framing","hidFraming","blocks","result","buffer","Buffer","acc","releaseInterface","gracefullyResetDevice","setScrambleKey","requestLedgerDevice","TransportWebUSB","getLedgerDevices","iface","alternates","transport","onDisconnect","navigator","isSupported","list","listen","observer","unsubscribed","getFirstLedgerDevice","type","descriptor","window","unsubscribe","asUInt16BE","initialAcc","data","dataLength","sequence","makeBlocks","nbBlocks","head","chunk","reduceResponse","TransportError","chunkData","getReducedResult","internalRe","src","tokens","valid","clean","inc","diff","major","minor","patch","prerelease","rcompare","compareLoose","sort","rsort","coerce","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","intersects","simplifyRange","subset","v","s","trim","replace","release","identifier","version1","version2","v1","v2","hasPre","prefix","defaultResult","key","parsed","String","rtl","next","COERCERTL","exec","index","lastIndex","COERCE","Yallist","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","LRUCache","max","Infinity","lc","stale","maxAge","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lC","hit","fn","thisp","walker","tail","prev","forEachStep","toArray","map","Map","isStale","now","h","Date","len","has","del","get","item","Entry","unshift","node","arr","l","expiresAt","self","doUse","unshiftNode","delete","removeNode","call","push","arguments","insert","inserted","Node","create","prototype","Error","pushNode","pop","res","shift","forEachReverse","n","getReverse","mapReverse","initial","reduceReverse","Array","toArrayReverse","slice","from","to","ret","sliceReverse","splice","start","deleteCount","reverse","p","iterator","c","join","split","versions","maxSV","rangeObj","min","minSV","minver","setMin","compver","raw","format","r1","r2","ranges","simplified","original","simpleSubset","sub","dom","gtltComp","eqSet","Set","higherGT","lowerLT","add","size","higher","lower","hasDomLT","hasDomGT","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","ledgerDevices","vendorId","filters","existingDevices","Promise","LOOSE","FULL","num","build","other","compareMain","comparePre","isNaN","parseRange","first","isNullSet","isAny","comps","memoOpts","keys","memoKey","cached","cache","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","compRe","rangeList","parseComparator","replaceGTE0","rangeMap","values","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","pr","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","tb","allowed","R","createToken","name","isGlobal","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","LONETILDE","LONECARET"],"mappings":"iHAEA,IAGMA,EAAmBC,OAAOD,kBACH,iBAK7BE,EAAOC,QAAU,CACfC,oBAV0B,QAW1BC,WATiB,IAUjBL,mBACAM,0BANgC,K,sBCTlC,gBAAMC,EACe,kBAAZC,GACPA,oYACAA,mYAAYC,YACZ,cAAcC,KAAKF,mYAAYC,YAC7B,wCAAIE,EAAJ,yBAAIA,EAAJ,uBAAa,EAAAC,SAAQC,MAAR,SAAc,UAAd,OAA2BF,KACxC,aAEJT,EAAOC,QAAUI,I,qCCNjB,IAAMO,EAAO,CAAC,oBAAqB,QAAS,OAQ5CZ,EAAOC,QAPc,SAAAY,GAAO,OACzBA,EACoB,kBAAZA,EAAuB,CAAEC,OAAO,GACvCF,EAAKG,QAAO,SAAAC,GAAC,OAAIH,EAAQG,MAAIC,QAAO,SAACJ,EAASG,GAE9C,OADAH,EAAQG,IAAK,EACNH,IACN,IALQ,K,qBCJb,IAAMK,EAAUC,EAAQ,KAExBnB,EAAOC,QADI,SAACmB,EAAGC,EAAGP,GAAP,OAAiBI,EAAQE,EAAGC,EAAGP,GAAS,I,yCCD7CQ,EAAMC,OAAO,cAEbC,E,wBAIJ,WAAaC,EAAMZ,GAGjB,GAH0B,UAC1BA,EAAUa,EAAab,GAEnBY,aAAgBD,EAAY,CAC9B,GAAIC,EAAKX,UAAYD,EAAQC,MAC3B,OAAOW,EAEPA,EAAOA,EAAKE,MAIhBtB,EAAM,aAAcoB,EAAMZ,GAC1Be,KAAKf,QAAUA,EACfe,KAAKd,QAAUD,EAAQC,MACvBc,KAAKC,MAAMJ,GAEPG,KAAKE,SAAWR,EAClBM,KAAKD,MAAQ,GAEbC,KAAKD,MAAQC,KAAKG,SAAWH,KAAKE,OAAOE,QAG3C3B,EAAM,OAAQuB,M,+BAGhB,SAAOH,GACL,IAAMQ,EAAIL,KAAKf,QAAQC,MAAQoB,EAAGC,EAAEC,iBAAmBF,EAAGC,EAAEE,YACtDC,EAAIb,EAAKc,MAAMN,GAErB,IAAKK,EACH,MAAM,IAAIE,UAAJ,8BAAqCf,IAG7CG,KAAKG,cAAoBU,IAATH,EAAE,GAAmBA,EAAE,GAAK,GACtB,MAAlBV,KAAKG,WACPH,KAAKG,SAAW,IAIbO,EAAE,GAGLV,KAAKE,OAAS,IAAIY,EAAOJ,EAAE,GAAIV,KAAKf,QAAQC,OAF5Cc,KAAKE,OAASR,I,sBAMlB,WACE,OAAOM,KAAKD,Q,kBAGd,SAAMK,GAGJ,GAFA3B,EAAM,kBAAmB2B,EAASJ,KAAKf,QAAQC,OAE3Cc,KAAKE,SAAWR,GAAOU,IAAYV,EACrC,OAAO,EAGT,GAAuB,kBAAZU,EACT,IACEA,EAAU,IAAIU,EAAOV,EAASJ,KAAKf,SACnC,MAAO8B,GACP,OAAO,EAIX,OAAOC,EAAIZ,EAASJ,KAAKG,SAAUH,KAAKE,OAAQF,KAAKf,W,wBAGvD,SAAYY,EAAMZ,GAChB,KAAMY,aAAgBD,GACpB,MAAM,IAAIgB,UAAU,4BAUtB,GAPK3B,GAA8B,kBAAZA,IACrBA,EAAU,CACRC,QAASD,EACTgC,mBAAmB,IAID,KAAlBjB,KAAKG,SACP,MAAmB,KAAfH,KAAKD,OAGF,IAAImB,EAAMrB,EAAKE,MAAOd,GAASL,KAAKoB,KAAKD,OAC3C,GAAsB,KAAlBF,EAAKM,SACd,MAAmB,KAAfN,EAAKE,OAGF,IAAImB,EAAMlB,KAAKD,MAAOd,GAASL,KAAKiB,EAAKK,QAGlD,IAAMiB,GACe,OAAlBnB,KAAKG,UAAuC,MAAlBH,KAAKG,YACb,OAAlBN,EAAKM,UAAuC,MAAlBN,EAAKM,UAC5BiB,GACe,OAAlBpB,KAAKG,UAAuC,MAAlBH,KAAKG,YACb,OAAlBN,EAAKM,UAAuC,MAAlBN,EAAKM,UAC5BkB,EAAarB,KAAKE,OAAOE,UAAYP,EAAKK,OAAOE,QACjDkB,GACe,OAAlBtB,KAAKG,UAAuC,OAAlBH,KAAKG,YACb,OAAlBN,EAAKM,UAAuC,OAAlBN,EAAKM,UAC5BoB,EACJP,EAAIhB,KAAKE,OAAQ,IAAKL,EAAKK,OAAQjB,KAChB,OAAlBe,KAAKG,UAAuC,MAAlBH,KAAKG,YACX,OAAlBN,EAAKM,UAAuC,MAAlBN,EAAKM,UAC9BqB,EACJR,EAAIhB,KAAKE,OAAQ,IAAKL,EAAKK,OAAQjB,KAChB,OAAlBe,KAAKG,UAAuC,MAAlBH,KAAKG,YACX,OAAlBN,EAAKM,UAAuC,MAAlBN,EAAKM,UAEpC,OACEgB,GACAC,GACCC,GAAcC,GACfC,GACAC,K,gBAvHJ,WACE,OAAO9B,M,KA2HXtB,EAAOC,QAAUuB,EAEjB,IAAME,EAAeP,EAAQ,MAC7B,EAAgBA,EAAQ,KAAjBe,EAAP,EAAOA,GAAIC,EAAX,EAAWA,EACLS,EAAMzB,EAAQ,MACdd,EAAQc,EAAQ,MAChBuB,EAASvB,EAAQ,KACjB2B,EAAQ3B,EAAQ,M,qBCtItB,IAAM2B,EAAQ3B,EAAQ,KAStBnB,EAAOC,QARW,SAAC+B,EAASqB,EAAOxC,GACjC,IACEwC,EAAQ,IAAIP,EAAMO,EAAOxC,GACzB,MAAO8B,GACP,OAAO,EAET,OAAOU,EAAM7C,KAAKwB,K,mBCPpB,IAAMsB,EAAU,WACVC,EAAqB,SAACnC,EAAGC,GAC7B,IAAMmC,EAAOF,EAAQ9C,KAAKY,GACpBqC,EAAOH,EAAQ9C,KAAKa,GAO1B,OALImC,GAAQC,IACVrC,GAAKA,EACLC,GAAKA,GAGAD,IAAMC,EAAI,EACZmC,IAASC,GAAS,EAClBA,IAASD,EAAQ,EAClBpC,EAAIC,GAAK,EACT,GAKNrB,EAAOC,QAAU,CACfsD,qBACAG,oBAJ0B,SAACtC,EAAGC,GAAJ,OAAUkC,EAAmBlC,EAAGD,M,qBCjB5D,IAAMF,EAAUC,EAAQ,KAExBnB,EAAOC,QADI,SAACmB,EAAGC,EAAGP,GAAP,OAA0C,IAAzBI,EAAQE,EAAGC,EAAGP,K,qBCD1C,IAAM4B,EAASvB,EAAQ,KAMvBnB,EAAOC,QALc,SAACmB,EAAGC,EAAGP,GAC1B,IAAM6C,EAAW,IAAIjB,EAAOtB,EAAGN,GACzB8C,EAAW,IAAIlB,EAAOrB,EAAGP,GAC/B,OAAO6C,EAASzC,QAAQ0C,IAAaD,EAASE,aAAaD,K,qBCJ7D,IAAM1C,EAAUC,EAAQ,KAExBnB,EAAOC,QADI,SAACmB,EAAGC,EAAGP,GAAP,OAAiBI,EAAQE,EAAGC,EAAGP,GAAS,I,qBCDnD,IAAMI,EAAUC,EAAQ,KAExBnB,EAAOC,QADK,SAACmB,EAAGC,EAAGP,GAAP,OAAiBI,EAAQE,EAAGC,EAAGP,IAAU,I,qBCDrD,IAAMI,EAAUC,EAAQ,KAExBnB,EAAOC,QADK,SAACmB,EAAGC,EAAGP,GAAP,OAAiBI,EAAQE,EAAGC,EAAGP,IAAU,I,qBCDrD,IAAM4B,EAASvB,EAAQ,KACjBK,EAAaL,EAAQ,MACpBG,EAAOE,EAAPF,IACDwB,EAAQ3B,EAAQ,KAChB2C,EAAY3C,EAAQ,MACpB4C,EAAK5C,EAAQ,MACb6C,EAAK7C,EAAQ,MACb8C,EAAM9C,EAAQ,MACd+C,EAAM/C,EAAQ,MAuEpBnB,EAAOC,QArES,SAAC+B,EAASqB,EAAOc,EAAMtD,GAIrC,IAAIuD,EAAMC,EAAOC,EAAM7C,EAAM8C,EAC7B,OAJAvC,EAAU,IAAIU,EAAOV,EAASnB,GAC9BwC,EAAQ,IAAIP,EAAMO,EAAOxC,GAGjBsD,GACN,IAAK,IACHC,EAAOL,EACPM,EAAQJ,EACRK,EAAON,EACPvC,EAAO,IACP8C,EAAQ,KACR,MACF,IAAK,IACHH,EAAOJ,EACPK,EAAQH,EACRI,EAAOP,EACPtC,EAAO,IACP8C,EAAQ,KACR,MACF,QACE,MAAM,IAAI/B,UAAU,yCAIxB,GAAIsB,EAAU9B,EAASqB,EAAOxC,GAC5B,OAAO,EAMT,IAhCiD,eAgCxC2D,GACP,IAAMC,EAAcpB,EAAMqB,IAAIF,GAE1BG,EAAO,KACPC,EAAM,KAiBV,OAfAH,EAAYI,SAAQ,SAACC,GACfA,EAAWhD,SAAWR,IACxBwD,EAAa,IAAItD,EAAW,YAE9BmD,EAAOA,GAAQG,EACfF,EAAMA,GAAOE,EACTV,EAAKU,EAAWhD,OAAQ6C,EAAK7C,OAAQjB,GACvC8D,EAAOG,EACER,EAAKQ,EAAWhD,OAAQ8C,EAAI9C,OAAQjB,KAC7C+D,EAAME,MAMNH,EAAK5C,WAAaN,GAAQkD,EAAK5C,WAAawC,EAC9C,IAAO,GAKHK,EAAI7C,UAAY6C,EAAI7C,WAAaN,IACnC4C,EAAMrC,EAAS4C,EAAI9C,QAEZ8C,EAAI7C,WAAawC,GAASD,EAAKtC,EAAS4C,EAAI9C,QACrD,IAAO,QADF,EADL,IAAO,IA7BF0C,EAAI,EAAGA,EAAInB,EAAMqB,IAAIK,SAAUP,EAAG,SAAlCA,GAAkC,kCAkC3C,OAAO,I,qIClDHQ,EAAU,CACdC,KAAM,CACJC,GADI,OAEJC,YAFI,iBAGJC,YAHI,EAIJC,mBAJI,EAKJC,SALI,EAMJC,WAAY,OACZC,UAAW,KACXC,aAAeC,YAAD,OAAqC,OAErDC,MAAO,CACLT,GADK,QAELC,YAFK,sBAGLC,YAHK,GAILC,mBAJK,EAKLC,SALK,EAMLC,WAAY,OACZC,UAAW,KACXC,aAAeG,YAAD,OACZ9D,OAAUA,WAAVA,YAAqD,KAAW,OAEpE+D,MAAO,CACLX,GADK,QAELC,YAFK,sBAGLC,YAHK,GAILC,mBAJK,EAKLC,SALK,EAMLC,WAAY,QACZC,UAAW,KACXC,aAAeC,YAAD,OAAqC,MACnDI,cAAe,CACb,CAEEC,YAFF,uCAGEC,WAHF,uCAIEC,UAAW,wCAEb,CACEF,YADF,uCAEEC,WAFF,uCAGEC,UAAW,2CAabC,EAA6BC,cAAnC,GAKaC,EAAN,MAcMC,EAAwBC,YACnC,IAAMC,EAASL,QAAkBM,YAAD,OAAOA,uBAAvC,KACA,KAAY,OAAOD,EAEnB,IAAME,EAAKH,GAAX,EAEA,OADoBJ,QAAkBM,YAAD,OAAOA,gBAA5C,MAWIE,EAAN,GACMC,EAAN,GAIA,IAAK,IAAL,OAAwB,CACtB,IAAMC,EAAc5B,EAApB,GACQc,EAAR,EAAQA,cACR,KACE,IAAK,IAAItB,EAAT,EAAgBA,EAAIsB,EAApB,OAA0CtB,IAAK,CAC7C,IAAMqC,EAAOf,EAAb,GACAY,OAAuBG,EAAvBH,aACAC,EAAmBE,EAAnBF,aAAuCA,EACrCE,2BADqCF,kBAEjCC,eAAgBC,M,qBCjI5B,IAAM3F,EAAUC,EAAQ,KAExBnB,EAAOC,QADK,SAACmB,EAAGC,EAAGP,GAAP,OAA0C,IAAzBI,EAAQE,EAAGC,EAAGP,K,qBCD3C,IAAMgG,EAAK3F,EAAQ,MACb4F,EAAM5F,EAAQ,MACd4C,EAAK5C,EAAQ,MACb+C,EAAM/C,EAAQ,MACd6C,EAAK7C,EAAQ,MACb8C,EAAM9C,EAAQ,MA0CpBnB,EAAOC,QAxCK,SAACmB,EAAG4F,EAAI3F,EAAGP,GACrB,OAAQkG,GACN,IAAK,MAKH,MAJiB,kBAAN5F,IACTA,EAAIA,EAAEY,SACS,kBAANX,IACTA,EAAIA,EAAEW,SACDZ,IAAMC,EAEf,IAAK,MAKH,MAJiB,kBAAND,IACTA,EAAIA,EAAEY,SACS,kBAANX,IACTA,EAAIA,EAAEW,SACDZ,IAAMC,EAEf,IAAK,GACL,IAAK,IACL,IAAK,KACH,OAAOyF,EAAG1F,EAAGC,EAAGP,GAElB,IAAK,KACH,OAAOiG,EAAI3F,EAAGC,EAAGP,GAEnB,IAAK,IACH,OAAOiD,EAAG3C,EAAGC,EAAGP,GAElB,IAAK,KACH,OAAOoD,EAAI9C,EAAGC,EAAGP,GAEnB,IAAK,IACH,OAAOkD,EAAG5C,EAAGC,EAAGP,GAElB,IAAK,KACH,OAAOmD,EAAI7C,EAAGC,EAAGP,GAEnB,QACE,MAAM,IAAI0B,UAAJ,4BAAmCwE,O,oOCThC,E,kDAObC,WAAW,KAA6C,kCACtD,gBAPFC,YAMwD,IALxDN,iBAKwD,IAJxDO,QAAUC,iBAAWA,eAImC,EAHxDC,WAAa,GAG2C,EAFxDC,qBAEwD,4CA2GrCC,YACb,EAAJ,qBACA,wBACA,yBA9GsD,WAgI5CC,YAAD,OACT,2CAAwB,8CAAApG,EAAA,uEAChB,EADgB,EAChB,QAAWiG,EADK,EACLA,WACjBI,YAAI,OAAQ,MAAQD,WAApBC,QAEMC,EAAUC,IAAWR,EAJO,GAO5BS,EAASF,aAAf,GACSlD,EAAT,EARsB,YAQNA,EAAIoD,EAApB,QARsB,iCASd,qBA1Jd,EA0JsDA,EAA9C,IAToB,OAQapD,IARb,0BAebqD,EAASH,mBAAlB,GAfsB,kCAgBJ,oBAjKxB,EAiKQ,GAhBoB,QAgBdzF,EAhBc,OAiBd6F,EAASC,OAAY9F,OAA3B,QACA+F,EAAMN,mBAANM,GAlBoB,+BAqBtBP,YAAI,OAAQ,MAAQI,WAApBJ,QArBsB,kBAsBtB,GAtBsB,6CAAxB,OAuBUF,YACR,GAAIA,GAAKA,EAALA,SAAkBA,mBAAtB,gBAEE,MADA,qBACM,IAAI,EAAJ,kCAAsCA,EAA5C,SAEF,YA3JF,WACA,oBACA,cAAmBlB,YAAqBa,EAAxC,WAJsD,E,gFAoHxD,sBAAA9F,EAAA,sEACQQ,KAAN,oBADF,uBAEQA,KAAKsF,OAAOe,iBAAiBrG,KAAnC,iBAFF,uBAGQsG,EAAsBtG,KAA5B,QAHF,uBAIQA,KAAKsF,OAAX,QAJF,gD,kFA4CAiB,e,6DAxGA,oGACuBC,cADvB,cACQlB,EADR,yBAESmB,OAAP,IAFF,2C,wHAQA,oGACwBC,cADxB,UAEE,KADMtD,EADR,QAEMA,OAFN,yCAE4B,MAF5B,gCAGSqD,OAAqBrD,EAA5B,KAHF,2C,+GASA,2GACQkC,EAAN,OADF,UAEE,OAAIA,gBAFN,gCAGUA,sBA7FZ,GA0FE,UAKQqB,EAAQrB,qCAAyC,qBAAGsB,WACxDA,MAAiBpH,YAAD,OADlB,MACyBA,uBAN3B,sBASU,IAAI,EAAJ,+BAAN,qGATJ,cAaQkG,EAAkBiB,EAAxB,gBAbF,mBAeUrB,iBAAN,GAfJ,2EAiBUA,EAAN,QAjBJ,cAkBU,IAAI,EAAJ,+BAAmCK,KAAzC,SAlBJ,eAoBQkB,EAAY,IAAIJ,EAAgBnB,EAAtC,GACMwB,EAAgBnB,SAAhBmB,EAAgBnB,GAChBL,IAAWK,EAAf,SAEEoB,kDACAF,kBAA0B,IAA1BA,wBAIJE,+CA7BF,kBA8BE,GA9BF,0D,4DAhFa,K,SA0Kf,E,8EAAA,uBAAAvH,EAAA,+EAEU8F,EAAN,QAFJ,sDAIIxG,mBAJJ,yD,sBA1KqB2H,EAiBZO,YAAcA,IAjBFP,EAsBZQ,KAAOP,IAtBKD,EA8BZS,OACLC,YAEA,IAAIC,GAAJ,EAwBA,OAvBAC,oBACG/B,YACC,MAAmB,CACjB,IAAMN,EAAcP,YAAqBa,EAAzC,WACA6B,OAAc,CAAEG,KAAF,MAAeC,WAAf,EAAmCvC,gBACjDmC,iBAGHpI,YAEGyI,qBACAzI,aAAiByI,OADjBA,cADF,KAGEzI,OAEAoI,QAAe,IAAI,EAAJ,+BAAmCpI,EAAlDoI,UAEAA,QAAe,IAAI,EAAJ,2BAA+BpI,EAA9CoI,aAOC,CAAEM,YAHT,WACEL,S,0ICxFN,aAUA,SAASM,EAAW3H,GAClB,IAAMN,EAAI0G,QAAV,GAEA,OADA1G,qBACA,EAGF,IAAMkI,EAAa,CACjBC,KAAMzB,QADW,GAEjB0B,WAFiB,EAGjBC,SAAU,G,EAMa,SAACvC,EAAD,GACvB,MAAO,CACLwC,WADK,SACK,GACR,IAAIH,EAAOzB,SAAc,CAACuB,EAAW9B,EAAZ,QAAzB,IACMhC,EAAY6B,EAAlB,EACMuC,EAAWxC,UAAUoC,SAA3B,GACAA,EAAOzB,SAAc,CAAC,EAEpBA,QAAa6B,IAAuBJ,EAAvBI,OAAb7B,QAFFyB,KAMA,IADA,IAAM5B,EAAN,GACSpD,EAAT,EAAgBA,EAAhB,EAA8BA,IAAK,CACjC,IAAMqF,EAAO9B,QAAb,GACA8B,qBACAA,aAhCR,EAgCQA,GACAA,qBACA,IAAMC,EAAQN,QAAWhF,EAAXgF,GAA2BhF,EAAD,GAAxC,GACAoD,OAAYG,SAAc,CAAC8B,EAA3BjC,KAEF,UAGFmC,eAtBK,SAsBS,KACZ,MAAqC/B,GAArC,EAAI,EAAJ,EAAI,OAAJ,EAAI,WAAoB0B,EAAxB,EAAwBA,SAExB,GAAII,oBAAJ,EACE,MAAM,IAAIE,EAAJ,iCAAN,kBAEF,GA9CN,IA8CUF,eACF,MAAM,IAAIE,EAAJ,6BAAN,cAEF,GAAIF,oBAAJ,EACE,MAAM,IAAIE,EAAJ,kCAAN,mBAGF,IACEP,EAAaK,eAAbL,IAEFC,IACA,IAAMO,EAAYH,QAAY9B,EAAM,EAApC,GAMA,OALAwB,EAAOzB,SAAc,CAACyB,EAAtBA,KACIA,OAAJ,IACEA,EAAOA,UAAPA,IAGK,CACLA,OACAC,aACAC,aAIJQ,iBApDK,SAoDW,GACd,GAAIlC,GAAOA,eAAmBA,OAA9B,OACE,OAAOA,EAAP,Q,4DCjFR,IAAMmC,EAAahJ,EAAQ,KAC3BnB,EAAOC,QAAU,CACfiC,GAAIiI,EAAWjI,GACfkI,IAAKD,EAAWC,IAChBC,OAAQF,EAAWhI,EACnBjC,oBAAqBiB,EAAQ,MAAwBjB,oBACrDwC,OAAQvB,EAAQ,KAChBoC,mBAAoBpC,EAAQ,MAA0BoC,mBACtDG,oBAAqBvC,EAAQ,MAA0BuC,oBACvD7B,MAAOV,EAAQ,KACfmJ,MAAOnJ,EAAQ,MACfoJ,MAAOpJ,EAAQ,MACfqJ,IAAKrJ,EAAQ,MACbsJ,KAAMtJ,EAAQ,MACduJ,MAAOvJ,EAAQ,MACfwJ,MAAOxJ,EAAQ,MACfyJ,MAAOzJ,EAAQ,MACf0J,WAAY1J,EAAQ,MACpBD,QAASC,EAAQ,KACjB2J,SAAU3J,EAAQ,MAClB4J,aAAc5J,EAAQ,MACtB0C,aAAc1C,EAAQ,MACtB6J,KAAM7J,EAAQ,MACd8J,MAAO9J,EAAQ,MACf4C,GAAI5C,EAAQ,MACZ6C,GAAI7C,EAAQ,MACZ2F,GAAI3F,EAAQ,MACZ4F,IAAK5F,EAAQ,MACb+C,IAAK/C,EAAQ,MACb8C,IAAK9C,EAAQ,MACbyB,IAAKzB,EAAQ,MACb+J,OAAQ/J,EAAQ,MAChBK,WAAYL,EAAQ,MACpB2B,MAAO3B,EAAQ,KACf2C,UAAW3C,EAAQ,MACnBgK,cAAehK,EAAQ,MACvBiK,cAAejK,EAAQ,MACvBkK,cAAelK,EAAQ,MACvBmK,WAAYnK,EAAQ,MACpBoK,WAAYpK,EAAQ,MACpBqK,QAASrK,EAAQ,MACjBsK,IAAKtK,EAAQ,MACbuK,IAAKvK,EAAQ,MACbwK,WAAYxK,EAAQ,MACpByK,cAAezK,EAAQ,MACvB0K,OAAQ1K,EAAQ,Q,qBC9ClB,IAAMU,EAAQV,EAAQ,KAKtBnB,EAAOC,QAJO,SAAC+B,EAASnB,GACtB,IAAMiL,EAAIjK,EAAMG,EAASnB,GACzB,OAAOiL,EAAIA,EAAE9J,QAAU,O,qBCHzB,IAAMH,EAAQV,EAAQ,KAKtBnB,EAAOC,QAJO,SAAC+B,EAASnB,GACtB,IAAMkL,EAAIlK,EAAMG,EAAQgK,OAAOC,QAAQ,SAAU,IAAKpL,GACtD,OAAOkL,EAAIA,EAAE/J,QAAU,O,qBCHzB,IAAMU,EAASvB,EAAQ,KAcvBnB,EAAOC,QAZK,SAAC+B,EAASkK,EAASrL,EAASsL,GACb,kBAAbtL,IACVsL,EAAatL,EACbA,OAAU4B,GAGZ,IACE,OAAO,IAAIC,EAAOV,EAASnB,GAAS2J,IAAI0B,EAASC,GAAYnK,QAC7D,MAAOW,GACP,OAAO,Q,qBCXX,IAAMd,EAAQV,EAAQ,KAChB2F,EAAK3F,EAAQ,MAqBnBnB,EAAOC,QAnBM,SAACmM,EAAUC,GACtB,GAAIvF,EAAGsF,EAAUC,GACf,OAAO,KAEP,IAAMC,EAAKzK,EAAMuK,GACXG,EAAK1K,EAAMwK,GACXG,EAASF,EAAGzB,WAAW9F,QAAUwH,EAAG1B,WAAW9F,OAC/C0H,EAASD,EAAS,MAAQ,GAC1BE,EAAgBF,EAAS,aAAe,GAC9C,IAAK,IAAMG,KAAOL,EAChB,IAAY,UAARK,GAA2B,UAARA,GAA2B,UAARA,IACpCL,EAAGK,KAASJ,EAAGI,GACjB,OAAOF,EAASE,EAItB,OAAOD,I,qBCnBX,IAAMhK,EAASvB,EAAQ,KAEvBnB,EAAOC,QADO,SAACmB,EAAGN,GAAJ,OAAc,IAAI4B,EAAOtB,EAAGN,GAAO4J,Q,qBCDjD,IAAMhI,EAASvB,EAAQ,KAEvBnB,EAAOC,QADO,SAACmB,EAAGN,GAAJ,OAAc,IAAI4B,EAAOtB,EAAGN,GAAO6J,Q,qBCDjD,IAAMjI,EAASvB,EAAQ,KAEvBnB,EAAOC,QADO,SAACmB,EAAGN,GAAJ,OAAc,IAAI4B,EAAOtB,EAAGN,GAAO8J,Q,qBCDjD,IAAM/I,EAAQV,EAAQ,KAKtBnB,EAAOC,QAJY,SAAC+B,EAASnB,GAC3B,IAAM+L,EAAS/K,EAAMG,EAASnB,GAC9B,OAAQ+L,GAAUA,EAAO/B,WAAW9F,OAAU6H,EAAO/B,WAAa,O,qBCHpE,IAAM3J,EAAUC,EAAQ,KAExBnB,EAAOC,QADU,SAACmB,EAAGC,EAAGP,GAAP,OAAiBI,EAAQG,EAAGD,EAAGN,K,qBCDhD,IAAMI,EAAUC,EAAQ,KAExBnB,EAAOC,QADc,SAACmB,EAAGC,GAAJ,OAAUH,EAAQE,EAAGC,GAAG,K,qBCD7C,IAAMwC,EAAe1C,EAAQ,MAE7BnB,EAAOC,QADM,SAAC4I,EAAM/H,GAAP,OAAiB+H,EAAKmC,MAAK,SAAC5J,EAAGC,GAAJ,OAAUwC,EAAazC,EAAGC,EAAGP,Q,qBCDrE,IAAM+C,EAAe1C,EAAQ,MAE7BnB,EAAOC,QADO,SAAC4I,EAAM/H,GAAP,OAAiB+H,EAAKmC,MAAK,SAAC5J,EAAGC,GAAJ,OAAUwC,EAAaxC,EAAGD,EAAGN,Q,qBCDtE,IAAM4B,EAASvB,EAAQ,KACjBU,EAAQV,EAAQ,KACtB,EAAgBA,EAAQ,KAAjBe,EAAP,EAAOA,GAAIC,EAAX,EAAWA,EAgDXnC,EAAOC,QA9CQ,SAAC+B,EAASnB,GACvB,GAAImB,aAAmBU,EACrB,OAAOV,EAOT,GAJuB,kBAAZA,IACTA,EAAU6K,OAAO7K,IAGI,kBAAZA,EACT,OAAO,KAKT,IAAIO,EAAQ,KACZ,IAHA1B,EAAUA,GAAW,IAGRiM,IAEN,CAUL,IADA,IAAIC,GACIA,EAAO7K,EAAGC,EAAE6K,WAAWC,KAAKjL,OAC9BO,GAASA,EAAM2K,MAAQ3K,EAAM,GAAGwC,SAAW/C,EAAQ+C,SAElDxC,GACCwK,EAAKG,MAAQH,EAAK,GAAGhI,SAAWxC,EAAM2K,MAAQ3K,EAAM,GAAGwC,SAC3DxC,EAAQwK,GAEV7K,EAAGC,EAAE6K,WAAWG,UAAYJ,EAAKG,MAAQH,EAAK,GAAGhI,OAASgI,EAAK,GAAGhI,OAGpE7C,EAAGC,EAAE6K,WAAWG,WAAa,OArB7B5K,EAAQP,EAAQO,MAAML,EAAGC,EAAEiL,SAwB7B,OAAc,OAAV7K,EACK,KAEFV,EAAM,GAAD,OAAIU,EAAM,GAAV,YAAgBA,EAAM,IAAM,IAA5B,YAAmCA,EAAM,IAAM,KAAO1B,K,sDC7C9DwM,EAAUlM,EAAQ,MAElBmM,EAAM/L,OAAO,OACbgM,EAAShM,OAAO,UAChBiM,EAAoBjM,OAAO,oBAC3BkM,EAAclM,OAAO,cACrBmM,EAAUnM,OAAO,UACjBoM,EAAUpM,OAAO,WACjBqM,EAAoBrM,OAAO,kBAC3BsM,EAAWtM,OAAO,WAClBuM,EAAQvM,OAAO,SACfwM,EAAoBxM,OAAO,kBAE3ByM,EAAc,kBAAM,GAUpBC,E,WACJ,WAAapN,GAOX,GAPoB,UACG,kBAAZA,IACTA,EAAU,CAAEqN,IAAKrN,IAEdA,IACHA,EAAU,IAERA,EAAQqN,MAA+B,kBAAhBrN,EAAQqN,KAAoBrN,EAAQqN,IAAM,GACnE,MAAM,IAAI1L,UAAU,qCAEVZ,KAAK0L,GAAOzM,EAAQqN,KAAOC,IAAvC,IAEMC,EAAKvN,EAAQkE,QAAUiJ,EAG7B,GAFApM,KAAK4L,GAAoC,oBAAPY,EAAqBJ,EAAcI,EACrExM,KAAK6L,GAAe5M,EAAQwN,QAAS,EACjCxN,EAAQyN,QAAoC,kBAAnBzN,EAAQyN,OACnC,MAAM,IAAI9L,UAAU,2BACtBZ,KAAK8L,GAAW7M,EAAQyN,QAAU,EAClC1M,KAAK+L,GAAW9M,EAAQ0N,QACxB3M,KAAKgM,GAAqB/M,EAAQ2N,iBAAkB,EACpD5M,KAAKmM,GAAqBlN,EAAQ4N,iBAAkB,EACpD7M,KAAK8M,Q,2BAWP,WACE,OAAO9M,KAAK0L,I,IARd,SAASqB,GACP,GAAkB,kBAAPA,GAAmBA,EAAK,EACjC,MAAM,IAAInM,UAAU,qCAEtBZ,KAAK0L,GAAOqB,GAAMR,IAClBnC,EAAKpK,Q,sBASP,WACE,OAAOA,KAAK6L,I,IAJd,SAAgBmB,GACdhN,KAAK6L,KAAiBmB,I,kBAaxB,WACE,OAAOhN,KAAK8L,I,IARd,SAAYmB,GACV,GAAkB,kBAAPA,EACT,MAAM,IAAIrM,UAAU,wCAEtBZ,KAAK8L,GAAWmB,EAChB7C,EAAKpK,Q,4BAqBP,WAA0B,OAAOA,KAAK4L,I,IAdtC,SAAsBsB,GAAI,WACN,oBAAPA,IACTA,EAAKd,GAEHc,IAAOlN,KAAK4L,KACd5L,KAAK4L,GAAqBsB,EAC1BlN,KAAK2L,GAAU,EACf3L,KAAKiM,GAAUhJ,SAAQ,SAAAkK,GACrBA,EAAIhK,OAAS,EAAKyI,GAAmBuB,EAAIpN,MAAOoN,EAAIpC,KACpD,EAAKY,IAAWwB,EAAIhK,WAGxBiH,EAAKpK,Q,kBAIP,WAAgB,OAAOA,KAAK2L,K,qBAC5B,WAAmB,OAAO3L,KAAKiM,GAAU9I,S,sBAEzC,SAAUiK,EAAIC,GACZA,EAAQA,GAASrN,KACjB,IAAK,IAAIsN,EAAStN,KAAKiM,GAAUsB,KAAiB,OAAXD,GAAkB,CACvD,IAAME,EAAOF,EAAOE,KACpBC,EAAYzN,KAAMoN,EAAIE,EAAQD,GAC9BC,EAASE,K,qBAIb,SAASJ,EAAIC,GACXA,EAAQA,GAASrN,KACjB,IAAK,IAAIsN,EAAStN,KAAKiM,GAAUhE,KAAiB,OAAXqF,GAAkB,CACvD,IAAMnC,EAAOmC,EAAOnC,KACpBsC,EAAYzN,KAAMoN,EAAIE,EAAQD,GAC9BC,EAASnC,K,kBAIb,WACE,OAAOnL,KAAKiM,GAAUyB,UAAUC,KAAI,SAAAvO,GAAC,OAAIA,EAAE2L,S,oBAG7C,WACE,OAAO/K,KAAKiM,GAAUyB,UAAUC,KAAI,SAAAvO,GAAC,OAAIA,EAAEW,W,mBAG7C,WAAS,WACHC,KAAK+L,IACL/L,KAAKiM,IACLjM,KAAKiM,GAAU9I,QACjBnD,KAAKiM,GAAUhJ,SAAQ,SAAAkK,GAAG,OAAI,EAAKpB,GAASoB,EAAIpC,IAAKoC,EAAIpN,UAG3DC,KAAKkM,GAAS,IAAI0B,IAClB5N,KAAKiM,GAAY,IAAIR,EACrBzL,KAAK2L,GAAU,I,kBAGjB,WAAQ,WACN,OAAO3L,KAAKiM,GAAU0B,KAAI,SAAAR,GAAG,OAC3BU,EAAQ,EAAMV,IAAe,CAC3B/N,EAAG+N,EAAIpC,IACPb,EAAGiD,EAAIpN,MACP4F,EAAGwH,EAAIW,KAAOX,EAAIT,QAAU,OAC3BgB,UAAUvO,QAAO,SAAA4O,GAAC,OAAIA,O,qBAG7B,WACE,OAAO/N,KAAKiM,K,iBAGd,SAAKlB,EAAKhL,EAAO2M,GAGf,IAFAA,EAASA,GAAU1M,KAAK8L,KAEQ,kBAAXY,EACnB,MAAM,IAAI9L,UAAU,2BAEtB,IAAMkN,EAAMpB,EAASsB,KAAKF,MAAQ,EAC5BG,EAAMjO,KAAK4L,GAAmB7L,EAAOgL,GAE3C,GAAI/K,KAAKkM,GAAOgC,IAAInD,GAAM,CACxB,GAAIkD,EAAMjO,KAAK0L,GAEb,OADAyC,EAAInO,KAAMA,KAAKkM,GAAOkC,IAAIrD,KACnB,EAGT,IACMsD,EADOrO,KAAKkM,GAAOkC,IAAIrD,GACXhL,MAgBlB,OAZIC,KAAK+L,KACF/L,KAAKgM,IACRhM,KAAK+L,GAAShB,EAAKsD,EAAKtO,QAG5BsO,EAAKP,IAAMA,EACXO,EAAK3B,OAASA,EACd2B,EAAKtO,MAAQA,EACbC,KAAK2L,IAAWsC,EAAMI,EAAKlL,OAC3BkL,EAAKlL,OAAS8K,EACdjO,KAAKoO,IAAIrD,GACTX,EAAKpK,OACE,EAGT,IAAMmN,EAAM,IAAImB,EAAMvD,EAAKhL,EAAOkO,EAAKH,EAAKpB,GAG5C,OAAIS,EAAIhK,OAASnD,KAAK0L,IAChB1L,KAAK+L,IACP/L,KAAK+L,GAAShB,EAAKhL,IAEd,IAGTC,KAAK2L,IAAWwB,EAAIhK,OACpBnD,KAAKiM,GAAUsC,QAAQpB,GACvBnN,KAAKkM,GAAOpJ,IAAIiI,EAAK/K,KAAKiM,GAAUhE,MACpCmC,EAAKpK,OACE,K,iBAGT,SAAK+K,GACH,IAAK/K,KAAKkM,GAAOgC,IAAInD,GAAM,OAAO,EAClC,IAAMoC,EAAMnN,KAAKkM,GAAOkC,IAAIrD,GAAKhL,MACjC,OAAQ8N,EAAQ7N,KAAMmN,K,iBAGxB,SAAKpC,GACH,OAAOqD,EAAIpO,KAAM+K,GAAK,K,kBAGxB,SAAMA,GACJ,OAAOqD,EAAIpO,KAAM+K,GAAK,K,iBAGxB,WACE,IAAMyD,EAAOxO,KAAKiM,GAAUsB,KAC5B,OAAKiB,GAGLL,EAAInO,KAAMwO,GACHA,EAAKzO,OAHH,O,iBAMX,SAAKgL,GACHoD,EAAInO,KAAMA,KAAKkM,GAAOkC,IAAIrD,M,kBAG5B,SAAM0D,GAEJzO,KAAK8M,QAIL,IAFA,IAAMgB,EAAME,KAAKF,MAERY,EAAID,EAAItL,OAAS,EAAGuL,GAAK,EAAGA,IAAK,CACxC,IAAMvB,EAAMsB,EAAIC,GACVC,EAAYxB,EAAIxH,GAAK,EAC3B,GAAkB,IAAdgJ,EAEF3O,KAAK8C,IAAIqK,EAAI/N,EAAG+N,EAAIjD,OACjB,CACH,IAAMwC,EAASiC,EAAYb,EAEvBpB,EAAS,GACX1M,KAAK8C,IAAIqK,EAAI/N,EAAG+N,EAAIjD,EAAGwC,O,mBAM/B,WAAS,WACP1M,KAAKkM,GAAOjJ,SAAQ,SAAClD,EAAOgL,GAAR,OAAgBqD,EAAI,EAAMrD,GAAK,U,KAIjDqD,EAAM,SAACQ,EAAM7D,EAAK8D,GACtB,IAAML,EAAOI,EAAK1C,GAAOkC,IAAIrD,GAC7B,GAAIyD,EAAM,CACR,IAAMrB,EAAMqB,EAAKzO,MACjB,GAAI8N,EAAQe,EAAMzB,IAEhB,GADAgB,EAAIS,EAAMJ,IACLI,EAAK/C,GACR,YAEEgD,IACED,EAAKzC,KACPqC,EAAKzO,MAAM+N,IAAME,KAAKF,OACxBc,EAAK3C,GAAU6C,YAAYN,IAG/B,OAAOrB,EAAIpN,QAIT8N,EAAU,SAACe,EAAMzB,GACrB,IAAKA,IAASA,EAAIT,SAAWkC,EAAK9C,GAChC,OAAO,EAET,IAAMjD,EAAOmF,KAAKF,MAAQX,EAAIW,IAC9B,OAAOX,EAAIT,OAAS7D,EAAOsE,EAAIT,OAC3BkC,EAAK9C,IAAajD,EAAO+F,EAAK9C,IAG9B1B,EAAO,SAAAwE,GACX,GAAIA,EAAKjD,GAAUiD,EAAKlD,GACtB,IAAK,IAAI4B,EAASsB,EAAK3C,GAAUsB,KAC/BqB,EAAKjD,GAAUiD,EAAKlD,IAAmB,OAAX4B,GAAkB,CAI9C,IAAME,EAAOF,EAAOE,KACpBW,EAAIS,EAAMtB,GACVA,EAASE,IAKTW,EAAM,SAACS,EAAMJ,GACjB,GAAIA,EAAM,CACR,IAAMrB,EAAMqB,EAAKzO,MACb6O,EAAK7C,IACP6C,EAAK7C,GAASoB,EAAIpC,IAAKoC,EAAIpN,OAE7B6O,EAAKjD,IAAWwB,EAAIhK,OACpByL,EAAK1C,GAAO6C,OAAO5B,EAAIpC,KACvB6D,EAAK3C,GAAU+C,WAAWR,KAIxBF,EACJ,WAAavD,EAAKhL,EAAOoD,EAAQ2K,EAAKpB,GAAQ,UAC5C1M,KAAK+K,IAAMA,EACX/K,KAAKD,MAAQA,EACbC,KAAKmD,OAASA,EACdnD,KAAK8N,IAAMA,EACX9N,KAAK0M,OAASA,GAAU,GAItBe,EAAc,SAACmB,EAAMxB,EAAIoB,EAAMnB,GACnC,IAAIF,EAAMqB,EAAKzO,MACX8N,EAAQe,EAAMzB,KAChBgB,EAAIS,EAAMJ,GACLI,EAAK/C,KACRsB,OAAMtM,IAENsM,GACFC,EAAG6B,KAAK5B,EAAOF,EAAIpN,MAAOoN,EAAIpC,IAAK6D,IAGvCxQ,EAAOC,QAAUgO,G,kCCvUjB,SAASZ,EAASxE,GAChB,IAAI2H,EAAO5O,KASX,GARM4O,aAAgBnD,IACpBmD,EAAO,IAAInD,GAGbmD,EAAKrB,KAAO,KACZqB,EAAK3G,KAAO,KACZ2G,EAAKzL,OAAS,EAEV8D,GAAgC,oBAAjBA,EAAKhE,QACtBgE,EAAKhE,SAAQ,SAAUoL,GACrBO,EAAKM,KAAKb,WAEP,GAAIc,UAAUhM,OAAS,EAC5B,IAAK,IAAIP,EAAI,EAAG8L,EAAIS,UAAUhM,OAAQP,EAAI8L,EAAG9L,IAC3CgM,EAAKM,KAAKC,UAAUvM,IAIxB,OAAOgM,EAoVT,SAASQ,EAAQR,EAAMJ,EAAMzO,GAC3B,IAAIsP,EAAWb,IAASI,EAAK3G,KAC3B,IAAIqH,EAAKvP,EAAO,KAAMyO,EAAMI,GAC5B,IAAIU,EAAKvP,EAAOyO,EAAMA,EAAKrD,KAAMyD,GAWnC,OATsB,OAAlBS,EAASlE,OACXyD,EAAKrB,KAAO8B,GAEQ,OAAlBA,EAAS7B,OACXoB,EAAK3G,KAAOoH,GAGdT,EAAKzL,SAEEkM,EAGT,SAASH,EAAMN,EAAMP,GACnBO,EAAKrB,KAAO,IAAI+B,EAAKjB,EAAMO,EAAKrB,KAAM,KAAMqB,GACvCA,EAAK3G,OACR2G,EAAK3G,KAAO2G,EAAKrB,MAEnBqB,EAAKzL,SAGP,SAASoL,EAASK,EAAMP,GACtBO,EAAK3G,KAAO,IAAIqH,EAAKjB,EAAM,KAAMO,EAAK3G,KAAM2G,GACvCA,EAAKrB,OACRqB,EAAKrB,KAAOqB,EAAK3G,MAEnB2G,EAAKzL,SAGP,SAASmM,EAAMvP,EAAOyN,EAAMrC,EAAMlE,GAChC,KAAMjH,gBAAgBsP,GACpB,OAAO,IAAIA,EAAKvP,EAAOyN,EAAMrC,EAAMlE,GAGrCjH,KAAKiH,KAAOA,EACZjH,KAAKD,MAAQA,EAETyN,GACFA,EAAKrC,KAAOnL,KACZA,KAAKwN,KAAOA,GAEZxN,KAAKwN,KAAO,KAGVrC,GACFA,EAAKqC,KAAOxN,KACZA,KAAKmL,KAAOA,GAEZnL,KAAKmL,KAAO,KAjahB/M,EAAOC,QAAUoN,EAEjBA,EAAQ6D,KAAOA,EACf7D,EAAQ8D,OAAS9D,EAyBjBA,EAAQ+D,UAAUR,WAAa,SAAUR,GACvC,GAAIA,EAAKvH,OAASjH,KAChB,MAAM,IAAIyP,MAAM,oDAGlB,IAAItE,EAAOqD,EAAKrD,KACZqC,EAAOgB,EAAKhB,KAsBhB,OApBIrC,IACFA,EAAKqC,KAAOA,GAGVA,IACFA,EAAKrC,KAAOA,GAGVqD,IAASxO,KAAKiI,OAChBjI,KAAKiI,KAAOkD,GAEVqD,IAASxO,KAAKuN,OAChBvN,KAAKuN,KAAOC,GAGdgB,EAAKvH,KAAK9D,SACVqL,EAAKrD,KAAO,KACZqD,EAAKhB,KAAO,KACZgB,EAAKvH,KAAO,KAELkE,GAGTM,EAAQ+D,UAAUV,YAAc,SAAUN,GACxC,GAAIA,IAASxO,KAAKiI,KAAlB,CAIIuG,EAAKvH,MACPuH,EAAKvH,KAAK+H,WAAWR,GAGvB,IAAIvG,EAAOjI,KAAKiI,KAChBuG,EAAKvH,KAAOjH,KACZwO,EAAKrD,KAAOlD,EACRA,IACFA,EAAKuF,KAAOgB,GAGdxO,KAAKiI,KAAOuG,EACPxO,KAAKuN,OACRvN,KAAKuN,KAAOiB,GAEdxO,KAAKmD,WAGPsI,EAAQ+D,UAAUE,SAAW,SAAUlB,GACrC,GAAIA,IAASxO,KAAKuN,KAAlB,CAIIiB,EAAKvH,MACPuH,EAAKvH,KAAK+H,WAAWR,GAGvB,IAAIjB,EAAOvN,KAAKuN,KAChBiB,EAAKvH,KAAOjH,KACZwO,EAAKhB,KAAOD,EACRA,IACFA,EAAKpC,KAAOqD,GAGdxO,KAAKuN,KAAOiB,EACPxO,KAAKiI,OACRjI,KAAKiI,KAAOuG,GAEdxO,KAAKmD,WAGPsI,EAAQ+D,UAAUN,KAAO,WACvB,IAAK,IAAItM,EAAI,EAAG8L,EAAIS,UAAUhM,OAAQP,EAAI8L,EAAG9L,IAC3CsM,EAAKlP,KAAMmP,UAAUvM,IAEvB,OAAO5C,KAAKmD,QAGdsI,EAAQ+D,UAAUjB,QAAU,WAC1B,IAAK,IAAI3L,EAAI,EAAG8L,EAAIS,UAAUhM,OAAQP,EAAI8L,EAAG9L,IAC3C2L,EAAQvO,KAAMmP,UAAUvM,IAE1B,OAAO5C,KAAKmD,QAGdsI,EAAQ+D,UAAUG,IAAM,WACtB,GAAK3P,KAAKuN,KAAV,CAIA,IAAIqC,EAAM5P,KAAKuN,KAAKxN,MAQpB,OAPAC,KAAKuN,KAAOvN,KAAKuN,KAAKC,KAClBxN,KAAKuN,KACPvN,KAAKuN,KAAKpC,KAAO,KAEjBnL,KAAKiI,KAAO,KAEdjI,KAAKmD,SACEyM,IAGTnE,EAAQ+D,UAAUK,MAAQ,WACxB,GAAK7P,KAAKiI,KAAV,CAIA,IAAI2H,EAAM5P,KAAKiI,KAAKlI,MAQpB,OAPAC,KAAKiI,KAAOjI,KAAKiI,KAAKkD,KAClBnL,KAAKiI,KACPjI,KAAKiI,KAAKuF,KAAO,KAEjBxN,KAAKuN,KAAO,KAEdvN,KAAKmD,SACEyM,IAGTnE,EAAQ+D,UAAUvM,QAAU,SAAUmK,EAAIC,GACxCA,EAAQA,GAASrN,KACjB,IAAK,IAAIsN,EAAStN,KAAKiI,KAAMrF,EAAI,EAAc,OAAX0K,EAAiB1K,IACnDwK,EAAG6B,KAAK5B,EAAOC,EAAOvN,MAAO6C,EAAG5C,MAChCsN,EAASA,EAAOnC,MAIpBM,EAAQ+D,UAAUM,eAAiB,SAAU1C,EAAIC,GAC/CA,EAAQA,GAASrN,KACjB,IAAK,IAAIsN,EAAStN,KAAKuN,KAAM3K,EAAI5C,KAAKmD,OAAS,EAAc,OAAXmK,EAAiB1K,IACjEwK,EAAG6B,KAAK5B,EAAOC,EAAOvN,MAAO6C,EAAG5C,MAChCsN,EAASA,EAAOE,MAIpB/B,EAAQ+D,UAAUpB,IAAM,SAAU2B,GAChC,IAAK,IAAInN,EAAI,EAAG0K,EAAStN,KAAKiI,KAAiB,OAAXqF,GAAmB1K,EAAImN,EAAGnN,IAE5D0K,EAASA,EAAOnC,KAElB,GAAIvI,IAAMmN,GAAgB,OAAXzC,EACb,OAAOA,EAAOvN,OAIlB0L,EAAQ+D,UAAUQ,WAAa,SAAUD,GACvC,IAAK,IAAInN,EAAI,EAAG0K,EAAStN,KAAKuN,KAAiB,OAAXD,GAAmB1K,EAAImN,EAAGnN,IAE5D0K,EAASA,EAAOE,KAElB,GAAI5K,IAAMmN,GAAgB,OAAXzC,EACb,OAAOA,EAAOvN,OAIlB0L,EAAQ+D,UAAU7B,IAAM,SAAUP,EAAIC,GACpCA,EAAQA,GAASrN,KAEjB,IADA,IAAI4P,EAAM,IAAInE,EACL6B,EAAStN,KAAKiI,KAAiB,OAAXqF,GAC3BsC,EAAIV,KAAK9B,EAAG6B,KAAK5B,EAAOC,EAAOvN,MAAOC,OACtCsN,EAASA,EAAOnC,KAElB,OAAOyE,GAGTnE,EAAQ+D,UAAUS,WAAa,SAAU7C,EAAIC,GAC3CA,EAAQA,GAASrN,KAEjB,IADA,IAAI4P,EAAM,IAAInE,EACL6B,EAAStN,KAAKuN,KAAiB,OAAXD,GAC3BsC,EAAIV,KAAK9B,EAAG6B,KAAK5B,EAAOC,EAAOvN,MAAOC,OACtCsN,EAASA,EAAOE,KAElB,OAAOoC,GAGTnE,EAAQ+D,UAAUnQ,OAAS,SAAU+N,EAAI8C,GACvC,IAAI9J,EACAkH,EAAStN,KAAKiI,KAClB,GAAIkH,UAAUhM,OAAS,EACrBiD,EAAM8J,MACD,KAAIlQ,KAAKiI,KAId,MAAM,IAAIrH,UAAU,8CAHpB0M,EAAStN,KAAKiI,KAAKkD,KACnB/E,EAAMpG,KAAKiI,KAAKlI,MAKlB,IAAK,IAAI6C,EAAI,EAAc,OAAX0K,EAAiB1K,IAC/BwD,EAAMgH,EAAGhH,EAAKkH,EAAOvN,MAAO6C,GAC5B0K,EAASA,EAAOnC,KAGlB,OAAO/E,GAGTqF,EAAQ+D,UAAUW,cAAgB,SAAU/C,EAAI8C,GAC9C,IAAI9J,EACAkH,EAAStN,KAAKuN,KAClB,GAAI4B,UAAUhM,OAAS,EACrBiD,EAAM8J,MACD,KAAIlQ,KAAKuN,KAId,MAAM,IAAI3M,UAAU,8CAHpB0M,EAAStN,KAAKuN,KAAKC,KACnBpH,EAAMpG,KAAKuN,KAAKxN,MAKlB,IAAK,IAAI6C,EAAI5C,KAAKmD,OAAS,EAAc,OAAXmK,EAAiB1K,IAC7CwD,EAAMgH,EAAGhH,EAAKkH,EAAOvN,MAAO6C,GAC5B0K,EAASA,EAAOE,KAGlB,OAAOpH,GAGTqF,EAAQ+D,UAAU9B,QAAU,WAE1B,IADA,IAAIe,EAAM,IAAI2B,MAAMpQ,KAAKmD,QAChBP,EAAI,EAAG0K,EAAStN,KAAKiI,KAAiB,OAAXqF,EAAiB1K,IACnD6L,EAAI7L,GAAK0K,EAAOvN,MAChBuN,EAASA,EAAOnC,KAElB,OAAOsD,GAGThD,EAAQ+D,UAAUa,eAAiB,WAEjC,IADA,IAAI5B,EAAM,IAAI2B,MAAMpQ,KAAKmD,QAChBP,EAAI,EAAG0K,EAAStN,KAAKuN,KAAiB,OAAXD,EAAiB1K,IACnD6L,EAAI7L,GAAK0K,EAAOvN,MAChBuN,EAASA,EAAOE,KAElB,OAAOiB,GAGThD,EAAQ+D,UAAUc,MAAQ,SAAUC,EAAMC,IACxCA,EAAKA,GAAMxQ,KAAKmD,QACP,IACPqN,GAAMxQ,KAAKmD,SAEboN,EAAOA,GAAQ,GACJ,IACTA,GAAQvQ,KAAKmD,QAEf,IAAIsN,EAAM,IAAIhF,EACd,GAAI+E,EAAKD,GAAQC,EAAK,EACpB,OAAOC,EAELF,EAAO,IACTA,EAAO,GAELC,EAAKxQ,KAAKmD,SACZqN,EAAKxQ,KAAKmD,QAEZ,IAAK,IAAIP,EAAI,EAAG0K,EAAStN,KAAKiI,KAAiB,OAAXqF,GAAmB1K,EAAI2N,EAAM3N,IAC/D0K,EAASA,EAAOnC,KAElB,KAAkB,OAAXmC,GAAmB1K,EAAI4N,EAAI5N,IAAK0K,EAASA,EAAOnC,KACrDsF,EAAIvB,KAAK5B,EAAOvN,OAElB,OAAO0Q,GAGThF,EAAQ+D,UAAUkB,aAAe,SAAUH,EAAMC,IAC/CA,EAAKA,GAAMxQ,KAAKmD,QACP,IACPqN,GAAMxQ,KAAKmD,SAEboN,EAAOA,GAAQ,GACJ,IACTA,GAAQvQ,KAAKmD,QAEf,IAAIsN,EAAM,IAAIhF,EACd,GAAI+E,EAAKD,GAAQC,EAAK,EACpB,OAAOC,EAELF,EAAO,IACTA,EAAO,GAELC,EAAKxQ,KAAKmD,SACZqN,EAAKxQ,KAAKmD,QAEZ,IAAK,IAAIP,EAAI5C,KAAKmD,OAAQmK,EAAStN,KAAKuN,KAAiB,OAAXD,GAAmB1K,EAAI4N,EAAI5N,IACvE0K,EAASA,EAAOE,KAElB,KAAkB,OAAXF,GAAmB1K,EAAI2N,EAAM3N,IAAK0K,EAASA,EAAOE,KACvDiD,EAAIvB,KAAK5B,EAAOvN,OAElB,OAAO0Q,GAGThF,EAAQ+D,UAAUmB,OAAS,SAAUC,EAAOC,GACtCD,EAAQ5Q,KAAKmD,SACfyN,EAAQ5Q,KAAKmD,OAAS,GAEpByN,EAAQ,IACVA,EAAQ5Q,KAAKmD,OAASyN,GAGxB,IAAK,IAAIhO,EAAI,EAAG0K,EAAStN,KAAKiI,KAAiB,OAAXqF,GAAmB1K,EAAIgO,EAAOhO,IAChE0K,EAASA,EAAOnC,KAGlB,IAAIsF,EAAM,GACV,IAAS7N,EAAI,EAAG0K,GAAU1K,EAAIiO,EAAajO,IACzC6N,EAAIvB,KAAK5B,EAAOvN,OAChBuN,EAAStN,KAAKgP,WAAW1B,GAEZ,OAAXA,IACFA,EAAStN,KAAKuN,MAGZD,IAAWtN,KAAKiI,MAAQqF,IAAWtN,KAAKuN,OAC1CD,EAASA,EAAOE,MAGlB,IAAS5K,EAAI,EAAGA,GAAC,0CAAiBA,IAChC0K,EAAS8B,EAAOpP,KAAMsN,EAAc1K,EAArB,uBAAqBA,EAArB,mBAAqBA,EAArB,IAEjB,OAAO6N,GAGThF,EAAQ+D,UAAUsB,QAAU,WAG1B,IAFA,IAAI7I,EAAOjI,KAAKiI,KACZsF,EAAOvN,KAAKuN,KACPD,EAASrF,EAAiB,OAAXqF,EAAiBA,EAASA,EAAOE,KAAM,CAC7D,IAAIuD,EAAIzD,EAAOE,KACfF,EAAOE,KAAOF,EAAOnC,KACrBmC,EAAOnC,KAAO4F,EAIhB,OAFA/Q,KAAKiI,KAAOsF,EACZvN,KAAKuN,KAAOtF,EACLjI,MA2DT,IAEET,EAAQ,KAARA,CAAyBkM,GACzB,MAAO1K,M,6CCxaT3C,EAAOC,QAAU,SAAUoN,GACzBA,EAAQ+D,UAAU7P,OAAOqR,UAAzB,QAAqC,kFAC1B1D,EAAStN,KAAKiI,KADY,WACNqF,EADM,gBAEjC,OAFiC,SAE3BA,EAAOvN,MAFoB,OACEuN,EAASA,EAAOnC,KADlB,gE,qBCFvC,IAAMjK,EAAQ3B,EAAQ,KAOtBnB,EAAOC,QAJe,SAACoD,EAAOxC,GAAR,OACpB,IAAIiC,EAAMO,EAAOxC,GAAS6D,IACvB6K,KAAI,SAAA9N,GAAI,OAAIA,EAAK8N,KAAI,SAAAsD,GAAC,OAAIA,EAAElR,SAAOmR,KAAK,KAAK9G,OAAO+G,MAAM,U,qBCL/D,IAAMrQ,EAASvB,EAAQ,KACjB2B,EAAQ3B,EAAQ,KAuBtBnB,EAAOC,QArBe,SAAC+S,EAAU3P,EAAOxC,GACtC,IAAIqN,EAAM,KACN+E,EAAQ,KACRC,EAAW,KACf,IACEA,EAAW,IAAIpQ,EAAMO,EAAOxC,GAC5B,MAAO8B,GACP,OAAO,KAYT,OAVAqQ,EAASnO,SAAQ,SAACiH,GACZoH,EAAS1S,KAAKsL,KAEXoC,IAA6B,IAAtB+E,EAAM/R,QAAQ4K,KAGxBmH,EAAQ,IAAIvQ,EADZwL,EAAMpC,EACkBjL,QAIvBqN,I,qBCtBT,IAAMxL,EAASvB,EAAQ,KACjB2B,EAAQ3B,EAAQ,KAsBtBnB,EAAOC,QArBe,SAAC+S,EAAU3P,EAAOxC,GACtC,IAAIsS,EAAM,KACNC,EAAQ,KACRF,EAAW,KACf,IACEA,EAAW,IAAIpQ,EAAMO,EAAOxC,GAC5B,MAAO8B,GACP,OAAO,KAYT,OAVAqQ,EAASnO,SAAQ,SAACiH,GACZoH,EAAS1S,KAAKsL,KAEXqH,GAA4B,IAArBC,EAAMlS,QAAQ4K,KAGxBsH,EAAQ,IAAI1Q,EADZyQ,EAAMrH,EACkBjL,QAIvBsS,I,qBCrBT,IAAMzQ,EAASvB,EAAQ,KACjB2B,EAAQ3B,EAAQ,KAChB4C,EAAK5C,EAAQ,MAyDnBnB,EAAOC,QAvDY,SAACoD,EAAOvC,GACzBuC,EAAQ,IAAIP,EAAMO,EAAOvC,GAEzB,IAAIuS,EAAS,IAAI3Q,EAAO,SACxB,GAAIW,EAAM7C,KAAK6S,GACb,OAAOA,EAIT,GADAA,EAAS,IAAI3Q,EAAO,WAChBW,EAAM7C,KAAK6S,GACb,OAAOA,EAGTA,EAAS,KACT,IAdmC,eAc1B7O,GACP,IAAMC,EAAcpB,EAAMqB,IAAIF,GAE1B8O,EAAS,KACb7O,EAAYI,SAAQ,SAACC,GAEnB,IAAMyO,EAAU,IAAI7Q,EAAOoC,EAAWhD,OAAOE,SAC7C,OAAQ8C,EAAW/C,UACjB,IAAK,IAC+B,IAA9BwR,EAAQ1I,WAAW9F,OACrBwO,EAAQ3I,QAER2I,EAAQ1I,WAAWiG,KAAK,GAE1ByC,EAAQC,IAAMD,EAAQE,SAExB,IAAK,GACL,IAAK,KACEH,IAAUvP,EAAGwP,EAASD,KACzBA,EAASC,GAEX,MACF,IAAK,IACL,IAAK,KAEH,MAEF,QACE,MAAM,IAAIlC,MAAJ,gCAAmCvM,EAAW/C,gBAGtDuR,GAAYD,IAAUtP,EAAGsP,EAAQC,KACnCD,EAASC,IAhCJ9O,EAAI,EAAGA,EAAInB,EAAMqB,IAAIK,SAAUP,EAAG,EAAlCA,GAmCT,OAAI6O,GAAUhQ,EAAM7C,KAAK6S,GAChBA,EAGF,O,qBCzDT,IAAMvQ,EAAQ3B,EAAQ,KAUtBnB,EAAOC,QATY,SAACoD,EAAOxC,GACzB,IAGE,OAAO,IAAIiC,EAAMO,EAAOxC,GAASwC,OAAS,IAC1C,MAAOV,GACP,OAAO,Q,qBCNX,IAAM6I,EAAUrK,EAAQ,MAExBnB,EAAOC,QADK,SAAC+B,EAASqB,EAAOxC,GAAjB,OAA6B2K,EAAQxJ,EAASqB,EAAO,IAAKxC,K,qBCFtE,IAAM2K,EAAUrK,EAAQ,MAGxBnB,EAAOC,QADK,SAAC+B,EAASqB,EAAOxC,GAAjB,OAA6B2K,EAAQxJ,EAASqB,EAAO,IAAKxC,K,qBCFtE,IAAMiC,EAAQ3B,EAAQ,KAMtBnB,EAAOC,QALY,SAACyT,EAAIC,EAAI9S,GAG1B,OAFA6S,EAAK,IAAI5Q,EAAM4Q,EAAI7S,GACnB8S,EAAK,IAAI7Q,EAAM6Q,EAAI9S,GACZ6S,EAAG/H,WAAWgI,K,yCCDjB7P,EAAY3C,EAAQ,MACpBD,EAAUC,EAAQ,KACxBnB,EAAOC,QAAU,SAAC+S,EAAU3P,EAAOxC,GACjC,IAD6C,EACvC6D,EAAM,GACRyO,EAAM,KACN/D,EAAO,KACLtD,EAAIkH,EAAShI,MAAK,SAAC5J,EAAGC,GAAJ,OAAUH,EAAQE,EAAGC,EAAGR,MAJH,IAKvBiL,GALuB,IAK7C,2BAAyB,KAAd9J,EAAc,QACN8B,EAAU9B,EAASqB,EAAOxC,IAEzCuO,EAAOpN,EACFmR,IACHA,EAAMnR,KAEJoN,GACF1K,EAAIoM,KAAK,CAACqC,EAAK/D,IAEjBA,EAAO,KACP+D,EAAM,OAhBmC,8BAmBzCA,GACFzO,EAAIoM,KAAK,CAACqC,EAAK,OAGjB,IADA,IAAMS,EAAS,GACf,MAAyBlP,EAAzB,eAA8B,CAAzB,gBAAOyO,EAAP,KAAYjF,EAAZ,KACCiF,IAAQjF,EACV0F,EAAO9C,KAAKqC,GACJjF,GAAOiF,IAAQrH,EAAE,GAEjBoC,EAEDiF,IAAQrH,EAAE,GACjB8H,EAAO9C,KAAP,YAAiB5C,IAEjB0F,EAAO9C,KAAP,UAAeqC,EAAf,cAAwBjF,IAJxB0F,EAAO9C,KAAP,YAAiBqC,IAFjBS,EAAO9C,KAAK,KAQhB,IAAM+C,EAAaD,EAAOd,KAAK,QACzBgB,EAAgC,kBAAdzQ,EAAMmQ,IAAmBnQ,EAAMmQ,IAAM3G,OAAOxJ,GACpE,OAAOwQ,EAAW9O,OAAS+O,EAAS/O,OAAS8O,EAAaxQ,I,iCC1CtDP,EAAQ3B,EAAQ,KAChBK,EAAaL,EAAQ,MACnBG,EAAQE,EAARF,IACFwC,EAAY3C,EAAQ,MACpBD,EAAUC,EAAQ,KA+DlB4S,EAAe,SAACC,EAAKC,EAAKpT,GAC9B,GAAImT,IAAQC,EACV,OAAO,EAET,GAAmB,IAAfD,EAAIjP,QAAgBiP,EAAI,GAAGlS,SAAWR,EAAK,CAC7C,GAAmB,IAAf2S,EAAIlP,QAAgBkP,EAAI,GAAGnS,SAAWR,EACxC,OAAO,EAEP0S,EADOnT,EAAQgC,kBACT,CAAE,IAAIrB,EAAW,cAEjB,CAAE,IAAIA,EAAW,YAG3B,GAAmB,IAAfyS,EAAIlP,QAAgBkP,EAAI,GAAGnS,SAAWR,EAAK,CAC7C,GAAIT,EAAQgC,kBACV,OAAO,EAEPoR,EAAM,CAAE,IAAIzS,EAAW,YAG3B,IACIuC,EAAIC,EArBkC,EAkCtCkQ,EAdEC,EAAQ,IAAIC,IApBwB,IAsB1BJ,GAtB0B,IAsB1C,2BAAqB,KAAVnB,EAAU,QACA,MAAfA,EAAE9Q,UAAmC,OAAf8Q,EAAE9Q,SAC1BgC,EAAKsQ,EAAStQ,EAAI8O,EAAGhS,GACC,MAAfgS,EAAE9Q,UAAmC,OAAf8Q,EAAE9Q,SAC/BiC,EAAKsQ,EAAQtQ,EAAI6O,EAAGhS,GAEpBsT,EAAMI,IAAI1B,EAAE/Q,SA5B0B,8BA+B1C,GAAIqS,EAAMK,KAAO,EACf,OAAO,KAGT,GAAIzQ,GAAMC,EAAI,CAEZ,IADAkQ,EAAWhT,EAAQ6C,EAAGjC,OAAQkC,EAAGlC,OAAQjB,IAC1B,EACb,OAAO,KACJ,GAAiB,IAAbqT,IAAmC,OAAhBnQ,EAAGhC,UAAqC,OAAhBiC,EAAGjC,UACrD,OAAO,KAxC+B,MA2DtC0S,EAAQC,EACRC,EAAUC,EA5D4B,IA4CzBT,GA5CyB,IA4C1C,2BAAwB,KAAbrN,EAAa,QACtB,GAAI/C,IAAOD,EAAUgD,EAAI+F,OAAO9I,GAAKlD,GACnC,OAAO,KAET,GAAImD,IAAOF,EAAUgD,EAAI+F,OAAO7I,GAAKnD,GACnC,OAAO,KALa,UAONoT,GAPM,IAOtB,2BAAqB,KAAVpB,EAAU,QACnB,IAAK/O,EAAUgD,EAAI+F,OAAOgG,GAAIhS,GAC5B,OAAO,GATW,8BAYtB,OAAO,GAxDiC,8BA+D1C,IAAIgU,KAAe7Q,GAChBnD,EAAQgC,oBACTmB,EAAGlC,OAAO+I,WAAW9F,SAASf,EAAGlC,OAC/BgT,KAAe/Q,GAChBlD,EAAQgC,oBACTkB,EAAGjC,OAAO+I,WAAW9F,SAAShB,EAAGjC,OAE/B+S,GAAmD,IAAnCA,EAAahK,WAAW9F,QACxB,MAAhBf,EAAGjC,UAAmD,IAA/B8S,EAAahK,WAAW,KACjDgK,GAAe,GAxEyB,UA2E1BZ,GA3E0B,IA2E1C,2BAAqB,KAAVpB,EAAU,QAGnB,GAFA+B,EAAWA,GAA2B,MAAf/B,EAAE9Q,UAAmC,OAAf8Q,EAAE9Q,SAC/C4S,EAAWA,GAA2B,MAAf9B,EAAE9Q,UAAmC,OAAf8Q,EAAE9Q,SAC3CgC,EASF,GARI+Q,GACEjC,EAAE/Q,OAAO+I,YAAcgI,EAAE/Q,OAAO+I,WAAW9F,QAC3C8N,EAAE/Q,OAAO4I,QAAUoK,EAAapK,OAChCmI,EAAE/Q,OAAO6I,QAAUmK,EAAanK,OAChCkI,EAAE/Q,OAAO8I,QAAUkK,EAAalK,QAClCkK,GAAe,GAGA,MAAfjC,EAAE9Q,UAAmC,OAAf8Q,EAAE9Q,UAE1B,IADA0S,EAASJ,EAAStQ,EAAI8O,EAAGhS,MACVgS,GAAK4B,IAAW1Q,EAC7B,OAAO,OACJ,GAAoB,OAAhBA,EAAGhC,WAAsB+B,EAAUC,EAAGjC,OAAQ+K,OAAOgG,GAAIhS,GAClE,OAAO,EAEX,GAAImD,EASF,GARI6Q,GACEhC,EAAE/Q,OAAO+I,YAAcgI,EAAE/Q,OAAO+I,WAAW9F,QAC3C8N,EAAE/Q,OAAO4I,QAAUmK,EAAanK,OAChCmI,EAAE/Q,OAAO6I,QAAUkK,EAAalK,OAChCkI,EAAE/Q,OAAO8I,QAAUiK,EAAajK,QAClCiK,GAAe,GAGA,MAAfhC,EAAE9Q,UAAmC,OAAf8Q,EAAE9Q,UAE1B,IADA2S,EAAQJ,EAAQtQ,EAAI6O,EAAGhS,MACTgS,GAAK6B,IAAU1Q,EAC3B,OAAO,OACJ,GAAoB,OAAhBA,EAAGjC,WAAsB+B,EAAUE,EAAGlC,OAAQ+K,OAAOgG,GAAIhS,GAClE,OAAO,EAEX,IAAKgS,EAAE9Q,WAAaiC,GAAMD,IAAoB,IAAbmQ,EAC/B,OAAO,GA/G+B,8BAqH1C,QAAInQ,GAAM4Q,IAAa3Q,GAAmB,IAAbkQ,OAGzBlQ,GAAM4Q,IAAa7Q,GAAmB,IAAbmQ,MAMzBY,IAAgBD,KAOhBR,EAAW,SAACjT,EAAGC,EAAGR,GACtB,IAAKO,EACH,OAAOC,EACT,IAAMI,EAAOP,EAAQE,EAAEU,OAAQT,EAAES,OAAQjB,GACzC,OAAOY,EAAO,EAAIL,EACdK,EAAO,GACQ,MAAfJ,EAAEU,UAAmC,OAAfX,EAAEW,SADbV,EAEXD,GAIAkT,EAAU,SAAClT,EAAGC,EAAGR,GACrB,IAAKO,EACH,OAAOC,EACT,IAAMI,EAAOP,EAAQE,EAAEU,OAAQT,EAAES,OAAQjB,GACzC,OAAOY,EAAO,EAAIL,EACdK,EAAO,GACQ,MAAfJ,EAAEU,UAAmC,OAAfX,EAAEW,SADbV,EAEXD,GAGNpB,EAAOC,QAnLQ,SAAC+T,EAAKC,GAAsB,IAAjBpT,EAAiB,uDAAP,GAClC,GAAImT,IAAQC,EACV,OAAO,EAETD,EAAM,IAAIlR,EAAMkR,EAAKnT,GACrBoT,EAAM,IAAInR,EAAMmR,EAAKpT,GACrB,IANyC,EAMrCkU,GAAa,EANwB,IAQVf,EAAItP,KARM,IAQzCsQ,EAAO,IAAK,EAAL,qBAAiC,OAAtBC,EAAsB,YACdhB,EAAIvP,KADU,IACtC,2BAAiC,KAAtBwQ,EAAsB,QACzBC,EAAQpB,EAAakB,EAAWC,EAAWrU,GAEjD,GADAkU,EAAaA,GAAwB,OAAVI,EACvBA,EACF,SAASH,GALyB,8BAWtC,GAAID,EACF,OAAO,GApB8B,8BAsBzC,OAAO,I,gNC7DHK,EAAgB,CAAC,CAAEC,SAAUjP,MAE5B,aAAP,+B,4CAAO,4BAAAhF,EAAA,sEAEgBuH,UAAA,kBAA4B,CAAE2M,QAASF,IAFvD,cAEClO,EAFD,yBAGL,GAHK,4C,sBAMA,aAAP,+B,4CAAO,4BAAA9F,EAAA,sEAEiBuH,cAAtB,aAFK,cAEC3D,EAFD,yBAGEA,UAAgBwB,YAAD,OAAOA,aAA7B,QAHK,4C,sBAMA,aAAP,+B,4CAAO,4BAAApF,EAAA,sEACyBkH,IADzB,aACCiN,EADD,QAEDA,OAAJ,GAFK,yCAEkCA,EAAP,IAF3B,gCAGEnN,KAHF,4C,sBAMA,IAAMQ,EAAc,kBACzB4M,kBACE,aAEI7M,UAFJ,KAFG,oBAKMA,cAAP,c,wCC5BAtI,EAAQc,EAAQ,MACtB,EAAyCA,EAAQ,MAAzChB,EAAR,EAAQA,WAAYL,EAApB,EAAoBA,iBACpB,EAAkBqB,EAAQ,KAAlBe,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,EAENT,EAAeP,EAAQ,MACrBoC,EAAuBpC,EAAQ,MAA/BoC,mBACFb,E,wBACJ,WAAaV,EAASnB,GAGpB,GAH6B,UAC7BA,EAAUa,EAAab,GAEnBmB,aAAmBU,EAAQ,CAC7B,GAAIV,EAAQlB,UAAYD,EAAQC,OAC5BkB,EAAQa,sBAAwBhC,EAAQgC,kBAC1C,OAAOb,EAEPA,EAAUA,EAAQA,aAEf,GAAuB,kBAAZA,EAChB,MAAM,IAAIQ,UAAJ,2BAAkCR,IAG1C,GAAIA,EAAQ+C,OAAS5E,EACnB,MAAM,IAAIqC,UAAJ,iCACsBrC,EADtB,gBAKRE,EAAM,SAAU2B,EAASnB,GACzBe,KAAKf,QAAUA,EACfe,KAAKd,QAAUD,EAAQC,MAGvBc,KAAKiB,oBAAsBhC,EAAQgC,kBAEnC,IAAMP,EAAIN,EAAQgK,OAAOzJ,MAAM1B,EAAQC,MAAQoB,EAAGC,EAAEsT,OAASvT,EAAGC,EAAEuT,OAElE,IAAKpT,EACH,MAAM,IAAIE,UAAJ,2BAAkCR,IAU1C,GAPAJ,KAAK4R,IAAMxR,EAGXJ,KAAK8I,OAASpI,EAAE,GAChBV,KAAK+I,OAASrI,EAAE,GAChBV,KAAKgJ,OAAStI,EAAE,GAEZV,KAAK8I,MAAQ5K,GAAoB8B,KAAK8I,MAAQ,EAChD,MAAM,IAAIlI,UAAU,yBAGtB,GAAIZ,KAAK+I,MAAQ7K,GAAoB8B,KAAK+I,MAAQ,EAChD,MAAM,IAAInI,UAAU,yBAGtB,GAAIZ,KAAKgJ,MAAQ9K,GAAoB8B,KAAKgJ,MAAQ,EAChD,MAAM,IAAIpI,UAAU,yBAIjBF,EAAE,GAGLV,KAAKiJ,WAAavI,EAAE,GAAGyQ,MAAM,KAAKxD,KAAI,SAACrK,GACrC,GAAI,WAAW1E,KAAK0E,GAAK,CACvB,IAAMyQ,GAAOzQ,EACb,GAAIyQ,GAAO,GAAKA,EAAM7V,EACpB,OAAO6V,EAGX,OAAOzQ,KATTtD,KAAKiJ,WAAa,GAapBjJ,KAAKgU,MAAQtT,EAAE,GAAKA,EAAE,GAAGyQ,MAAM,KAAO,GACtCnR,KAAK6R,S,gCAGP,WAKE,OAJA7R,KAAKI,QAAL,UAAkBJ,KAAK8I,MAAvB,YAAgC9I,KAAK+I,MAArC,YAA8C/I,KAAKgJ,OAC/ChJ,KAAKiJ,WAAW9F,SAClBnD,KAAKI,SAAL,WAAoBJ,KAAKiJ,WAAWiI,KAAK,OAEpClR,KAAKI,U,sBAGd,WACE,OAAOJ,KAAKI,U,qBAGd,SAAS6T,GAEP,GADAxV,EAAM,iBAAkBuB,KAAKI,QAASJ,KAAKf,QAASgV,KAC9CA,aAAiBnT,GAAS,CAC9B,GAAqB,kBAAVmT,GAAsBA,IAAUjU,KAAKI,QAC9C,OAAO,EAET6T,EAAQ,IAAInT,EAAOmT,EAAOjU,KAAKf,SAGjC,OAAIgV,EAAM7T,UAAYJ,KAAKI,QAClB,EAGFJ,KAAKkU,YAAYD,IAAUjU,KAAKmU,WAAWF,K,yBAGpD,SAAaA,GAKX,OAJMA,aAAiBnT,IACrBmT,EAAQ,IAAInT,EAAOmT,EAAOjU,KAAKf,UAI/B0C,EAAmB3B,KAAK8I,MAAOmL,EAAMnL,QACrCnH,EAAmB3B,KAAK+I,MAAOkL,EAAMlL,QACrCpH,EAAmB3B,KAAKgJ,MAAOiL,EAAMjL,S,wBAIzC,SAAYiL,GAMV,GALMA,aAAiBnT,IACrBmT,EAAQ,IAAInT,EAAOmT,EAAOjU,KAAKf,UAI7Be,KAAKiJ,WAAW9F,SAAW8Q,EAAMhL,WAAW9F,OAC9C,OAAQ,EACH,IAAKnD,KAAKiJ,WAAW9F,QAAU8Q,EAAMhL,WAAW9F,OACrD,OAAO,EACF,IAAKnD,KAAKiJ,WAAW9F,SAAW8Q,EAAMhL,WAAW9F,OACtD,OAAO,EAGT,IAAIP,EAAI,EACR,EAAG,CACD,IAAMpD,EAAIQ,KAAKiJ,WAAWrG,GACpBnD,EAAIwU,EAAMhL,WAAWrG,GAE3B,GADAnE,EAAM,qBAAsBmE,EAAGpD,EAAGC,QACxBoB,IAANrB,QAAyBqB,IAANpB,EACrB,OAAO,EACF,QAAUoB,IAANpB,EACT,OAAO,EACF,QAAUoB,IAANrB,EACT,OAAQ,EACH,GAAIA,IAAMC,EAGf,OAAOkC,EAAmBnC,EAAGC,WAEtBmD,K,0BAGb,SAAcqR,GACNA,aAAiBnT,IACrBmT,EAAQ,IAAInT,EAAOmT,EAAOjU,KAAKf,UAGjC,IAAI2D,EAAI,EACR,EAAG,CACD,IAAMpD,EAAIQ,KAAKgU,MAAMpR,GACfnD,EAAIwU,EAAMD,MAAMpR,GAEtB,GADAnE,EAAM,qBAAsBmE,EAAGpD,EAAGC,QACxBoB,IAANrB,QAAyBqB,IAANpB,EACrB,OAAO,EACF,QAAUoB,IAANpB,EACT,OAAO,EACF,QAAUoB,IAANrB,EACT,OAAQ,EACH,GAAIA,IAAMC,EAGf,OAAOkC,EAAmBnC,EAAGC,WAEtBmD,K,iBAKb,SAAK0H,EAASC,GACZ,OAAQD,GACN,IAAK,WACHtK,KAAKiJ,WAAW9F,OAAS,EACzBnD,KAAKgJ,MAAQ,EACbhJ,KAAK+I,MAAQ,EACb/I,KAAK8I,QACL9I,KAAK4I,IAAI,MAAO2B,GAChB,MACF,IAAK,WACHvK,KAAKiJ,WAAW9F,OAAS,EACzBnD,KAAKgJ,MAAQ,EACbhJ,KAAK+I,QACL/I,KAAK4I,IAAI,MAAO2B,GAChB,MACF,IAAK,WAIHvK,KAAKiJ,WAAW9F,OAAS,EACzBnD,KAAK4I,IAAI,QAAS2B,GAClBvK,KAAK4I,IAAI,MAAO2B,GAChB,MAGF,IAAK,aAC4B,IAA3BvK,KAAKiJ,WAAW9F,QAClBnD,KAAK4I,IAAI,QAAS2B,GAEpBvK,KAAK4I,IAAI,MAAO2B,GAChB,MAEF,IAAK,QAMc,IAAfvK,KAAK+I,OACU,IAAf/I,KAAKgJ,OACsB,IAA3BhJ,KAAKiJ,WAAW9F,QAEhBnD,KAAK8I,QAEP9I,KAAK+I,MAAQ,EACb/I,KAAKgJ,MAAQ,EACbhJ,KAAKiJ,WAAa,GAClB,MACF,IAAK,QAKgB,IAAfjJ,KAAKgJ,OAA0C,IAA3BhJ,KAAKiJ,WAAW9F,QACtCnD,KAAK+I,QAEP/I,KAAKgJ,MAAQ,EACbhJ,KAAKiJ,WAAa,GAClB,MACF,IAAK,QAK4B,IAA3BjJ,KAAKiJ,WAAW9F,QAClBnD,KAAKgJ,QAEPhJ,KAAKiJ,WAAa,GAClB,MAGF,IAAK,MACH,GAA+B,IAA3BjJ,KAAKiJ,WAAW9F,OAClBnD,KAAKiJ,WAAa,CAAC,OACd,CAEL,IADA,IAAIrG,EAAI5C,KAAKiJ,WAAW9F,SACfP,GAAK,GACsB,kBAAvB5C,KAAKiJ,WAAWrG,KACzB5C,KAAKiJ,WAAWrG,KAChBA,GAAK,IAGE,IAAPA,GAEF5C,KAAKiJ,WAAWiG,KAAK,GAGrB3E,IAGEvK,KAAKiJ,WAAW,KAAOsB,EACrB6J,MAAMpU,KAAKiJ,WAAW,MACxBjJ,KAAKiJ,WAAa,CAACsB,EAAY,IAGjCvK,KAAKiJ,WAAa,CAACsB,EAAY,IAGnC,MAEF,QACE,MAAM,IAAIkF,MAAJ,sCAAyCnF,IAInD,OAFAtK,KAAK6R,SACL7R,KAAK4R,IAAM5R,KAAKI,QACTJ,S,KAIX5B,EAAOC,QAAUyC,G,oBC9RjB,IAAMA,EAASvB,EAAQ,KAIvBnB,EAAOC,QAHS,SAACmB,EAAGC,EAAGP,GAAP,OACd,IAAI4B,EAAOtB,EAAGN,GAAOI,QAAQ,IAAIwB,EAAOrB,EAAGP,M,yDCDvCgC,E,wBACJ,WAAaO,EAAOxC,GAAS,WAG3B,GAH2B,UAC3BA,EAAUa,EAAab,GAEnBwC,aAAiBP,EACnB,OACEO,EAAMvC,UAAYD,EAAQC,OAC1BuC,EAAMR,sBAAwBhC,EAAQgC,kBAE/BQ,EAEA,IAAIP,EAAMO,EAAMmQ,IAAK3S,GAIhC,GAAIwC,aAAiB7B,EAKnB,OAHAI,KAAK4R,IAAMnQ,EAAM1B,MACjBC,KAAK8C,IAAM,CAAC,CAACrB,IACbzB,KAAK6R,SACE7R,KAkBT,GAfAA,KAAKf,QAAUA,EACfe,KAAKd,QAAUD,EAAQC,MACvBc,KAAKiB,oBAAsBhC,EAAQgC,kBAGnCjB,KAAK4R,IAAMnQ,EACXzB,KAAK8C,IAAMrB,EACR0P,MAAM,cAENxD,KAAI,SAAAlM,GAAK,OAAI,EAAK4S,WAAW5S,EAAM2I,WAInCjL,QAAO,SAAA8R,GAAC,OAAIA,EAAE9N,WAEZnD,KAAK8C,IAAIK,OACZ,MAAM,IAAIvC,UAAJ,gCAAuCa,IAI/C,GAAIzB,KAAK8C,IAAIK,OAAS,EAAG,CAEvB,IAAMmR,EAAQtU,KAAK8C,IAAI,GAEvB,GADA9C,KAAK8C,IAAM9C,KAAK8C,IAAI3D,QAAO,SAAA8R,GAAC,OAAKsD,EAAUtD,EAAE,OACrB,IAApBjR,KAAK8C,IAAIK,OACXnD,KAAK8C,IAAM,CAACwR,QACT,GAAItU,KAAK8C,IAAIK,OAAS,EAAG,WAEZnD,KAAK8C,KAFO,IAE5B,2BAA0B,KAAfmO,EAAe,QACxB,GAAiB,IAAbA,EAAE9N,QAAgBqR,EAAMvD,EAAE,IAAK,CACjCjR,KAAK8C,IAAM,CAACmO,GACZ,QALwB,gCAWhCjR,KAAK6R,S,gCAGP,WAOE,OANA7R,KAAKyB,MAAQzB,KAAK8C,IACf6K,KAAI,SAAC8G,GACJ,OAAOA,EAAMvD,KAAK,KAAK9G,UAExB8G,KAAK,MACL9G,OACIpK,KAAKyB,Q,sBAGd,WACE,OAAOzB,KAAKyB,Q,wBAGd,SAAYA,GAAO,WACjBA,EAAQA,EAAM2I,OAId,IAAMsK,EAAWnQ,OAAOoQ,KAAK3U,KAAKf,SAASiS,KAAK,KAC1C0D,EAAU,cAAH,OAAiBF,EAAjB,YAA6BjT,GACpCoT,EAASC,EAAM1G,IAAIwG,GACzB,GAAIC,EACF,OAAOA,EAET,IAAM3V,EAAQc,KAAKf,QAAQC,MAErB6V,EAAK7V,EAAQoB,EAAGC,EAAEyU,kBAAoB1U,EAAGC,EAAE0U,aACjDxT,EAAQA,EAAM4I,QAAQ0K,EAAIG,EAAclV,KAAKf,QAAQgC,oBACrDxC,EAAM,iBAAkBgD,GAExBA,EAAQA,EAAM4I,QAAQ/J,EAAGC,EAAE4U,gBAAiBC,GAC5C3W,EAAM,kBAAmBgD,EAAOnB,EAAGC,EAAE4U,iBASrC1T,GAHAA,GAHAA,EAAQA,EAAM4I,QAAQ/J,EAAGC,EAAE8U,WAAYC,IAGzBjL,QAAQ/J,EAAGC,EAAEgV,WAAYC,IAGzBrE,MAAM,OAAOD,KAAK,KAKhC,IAhCiB,EAgCXuE,EAASvW,EAAQoB,EAAGC,EAAEC,iBAAmBF,EAAGC,EAAEE,YAC9CiV,EAAYjU,EACf0P,MAAM,KACNxD,KAAI,SAAA9N,GAAI,OAAI8V,EAAgB9V,EAAM,EAAKZ,YACvCiS,KAAK,KACLC,MAAM,OAENxD,KAAI,SAAA9N,GAAI,OAAI+V,EAAY/V,EAAM,EAAKZ,YAEnCE,OAAOa,KAAKf,QAAQC,MAAQ,SAAAW,GAAI,QAAMA,EAAKc,MAAM8U,IAAU,kBAAM,IACjE9H,KAAI,SAAA9N,GAAI,OAAI,IAAID,EAAWC,EAAM,EAAKZ,YAMnC4W,GADIH,EAAUvS,OACH,IAAIyK,KAhDJ,IAiDE8H,GAjDF,IAiDjB,2BAA8B,KAAnB7V,EAAmB,QAC5B,GAAI0U,EAAU1U,GACZ,MAAO,CAACA,GACVgW,EAAS/S,IAAIjD,EAAKE,MAAOF,IApDV,8BAsDbgW,EAASjD,KAAO,GAAKiD,EAAS3H,IAAI,KACpC2H,EAAS9G,OAAO,IAElB,IAAM9I,EAAS,EAAI4P,EAASC,UAE5B,OADAhB,EAAMhS,IAAI8R,EAAS3O,GACZA,I,wBAGT,SAAYxE,EAAOxC,GACjB,KAAMwC,aAAiBP,GACrB,MAAM,IAAIN,UAAU,uBAGtB,OAAOZ,KAAK8C,IAAIiT,MAAK,SAACC,GACpB,OACEC,EAAcD,EAAiB/W,IAC/BwC,EAAMqB,IAAIiT,MAAK,SAACG,GACd,OACED,EAAcC,EAAkBjX,IAChC+W,EAAgBG,OAAM,SAACC,GACrB,OAAOF,EAAiBC,OAAM,SAACE,GAC7B,OAAOD,EAAerM,WAAWsM,EAAiBpX,iB,kBAUhE,SAAMmB,GACJ,IAAKA,EACH,OAAO,EAGT,GAAuB,kBAAZA,EACT,IACEA,EAAU,IAAIU,EAAOV,EAASJ,KAAKf,SACnC,MAAO8B,GACP,OAAO,EAIX,IAAK,IAAI6B,EAAI,EAAGA,EAAI5C,KAAK8C,IAAIK,OAAQP,IACnC,GAAI0T,EAAQtW,KAAK8C,IAAIF,GAAIxC,EAASJ,KAAKf,SACrC,OAAO,EAGX,OAAO,M,KAGXb,EAAOC,QAAU6C,EAEjB,IACM4T,EAAQ,IADFvV,EAAQ,MACN,CAAQ,CAAE+M,IAAK,MAEvBxM,EAAeP,EAAQ,MACvBK,EAAaL,EAAQ,MACrBd,EAAQc,EAAQ,MAChBuB,EAASvB,EAAQ,KACvB,EAMIA,EAAQ,KALVe,EADF,EACEA,GACAC,EAFF,EAEEA,EACA6U,EAHF,EAGEA,sBACAE,EAJF,EAIEA,iBACAE,EALF,EAKEA,iBAGIjB,EAAY,SAAAtD,GAAC,MAAgB,aAAZA,EAAElR,OACnByU,EAAQ,SAAAvD,GAAC,MAAgB,KAAZA,EAAElR,OAIfkW,EAAgB,SAACpT,EAAa5D,GAKlC,IAJA,IAAIgH,GAAS,EACPsQ,EAAuB1T,EAAYyN,QACrCkG,EAAiBD,EAAqB5G,MAEnC1J,GAAUsQ,EAAqBpT,QACpC8C,EAASsQ,EAAqBJ,OAAM,SAACM,GACnC,OAAOD,EAAezM,WAAW0M,EAAiBxX,MAGpDuX,EAAiBD,EAAqB5G,MAGxC,OAAO1J,GAMH0P,EAAkB,SAAC9V,EAAMZ,GAU7B,OATAR,EAAM,OAAQoB,EAAMZ,GACpBY,EAAO6W,EAAc7W,EAAMZ,GAC3BR,EAAM,QAASoB,GACfA,EAAO8W,EAAc9W,EAAMZ,GAC3BR,EAAM,SAAUoB,GAChBA,EAAO+W,EAAe/W,EAAMZ,GAC5BR,EAAM,SAAUoB,GAChBA,EAAOgX,EAAahX,EAAMZ,GAC1BR,EAAM,QAASoB,GACRA,GAGHiX,EAAM,SAAAxT,GAAE,OAAKA,GAA2B,MAArBA,EAAGyT,eAAgC,MAAPzT,GAQ/CqT,EAAgB,SAAC9W,EAAMZ,GAAP,OACpBY,EAAKuK,OAAO+G,MAAM,OAAOxD,KAAI,SAAC9N,GAC5B,OAAOmX,EAAanX,EAAMZ,MACzBiS,KAAK,MAEJ8F,EAAe,SAACnX,EAAMZ,GAC1B,IAAMoB,EAAIpB,EAAQC,MAAQoB,EAAGC,EAAE0W,YAAc3W,EAAGC,EAAE2W,OAClD,OAAOrX,EAAKwK,QAAQhK,GAAG,SAAC8W,EAAGC,EAAG1W,EAAGqQ,EAAGsG,GAElC,IAAI5G,EAoBJ,OArBAhS,EAAM,QAASoB,EAAMsX,EAAGC,EAAG1W,EAAGqQ,EAAGsG,GAG7BP,EAAIM,GACN3G,EAAM,GACGqG,EAAIpW,GACb+P,EAAM,KAAH,OAAQ2G,EAAR,kBAAmBA,EAAI,EAAvB,UACMN,EAAI/F,GAEbN,EAAM,KAAH,OAAQ2G,EAAR,YAAa1W,EAAb,eAAqB0W,EAArB,aAA2B1W,EAAI,EAA/B,QACM2W,GACT5Y,EAAM,kBAAmB4Y,GACzB5G,EAAM,KAAH,OAAQ2G,EAAR,YAAa1W,EAAb,YAAkBqQ,EAAlB,YAAuBsG,EAAvB,aACED,EADF,aACQ1W,EAAI,EADZ,SAIH+P,EAAM,KAAH,OAAQ2G,EAAR,YAAa1W,EAAb,YAAkBqQ,EAAlB,aACEqG,EADF,aACQ1W,EAAI,EADZ,QAILjC,EAAM,eAAgBgS,GACfA,MAULiG,EAAgB,SAAC7W,EAAMZ,GAAP,OACpBY,EAAKuK,OAAO+G,MAAM,OAAOxD,KAAI,SAAC9N,GAC5B,OAAOyX,EAAazX,EAAMZ,MACzBiS,KAAK,MAEJoG,EAAe,SAACzX,EAAMZ,GAC1BR,EAAM,QAASoB,EAAMZ,GACrB,IAAMoB,EAAIpB,EAAQC,MAAQoB,EAAGC,EAAEgX,YAAcjX,EAAGC,EAAEiX,OAC5CC,EAAIxY,EAAQgC,kBAAoB,KAAO,GAC7C,OAAOpB,EAAKwK,QAAQhK,GAAG,SAAC8W,EAAGC,EAAG1W,EAAGqQ,EAAGsG,GAElC,IAAI5G,EA2CJ,OA5CAhS,EAAM,QAASoB,EAAMsX,EAAGC,EAAG1W,EAAGqQ,EAAGsG,GAG7BP,EAAIM,GACN3G,EAAM,GACGqG,EAAIpW,GACb+P,EAAM,KAAH,OAAQ2G,EAAR,eAAgBK,EAAhB,cAAuBL,EAAI,EAA3B,UACMN,EAAI/F,GAEXN,EADQ,MAAN2G,EACI,KAAH,OAAQA,EAAR,YAAa1W,EAAb,aAAmB+W,EAAnB,aAAyBL,EAAzB,aAA+B1W,EAAI,EAAnC,QAEG,KAAH,OAAQ0W,EAAR,YAAa1W,EAAb,aAAmB+W,EAAnB,cAA0BL,EAAI,EAA9B,UAEIC,GACT5Y,EAAM,kBAAmB4Y,GAGrB5G,EAFM,MAAN2G,EACQ,MAAN1W,EACI,KAAH,OAAQ0W,EAAR,YAAa1W,EAAb,YAAkBqQ,EAAlB,YAAuBsG,EAAvB,aACED,EADF,YACO1W,EADP,aACaqQ,EAAI,EADjB,MAGG,KAAH,OAAQqG,EAAR,YAAa1W,EAAb,YAAkBqQ,EAAlB,YAAuBsG,EAAvB,aACED,EADF,aACQ1W,EAAI,EADZ,QAIC,KAAH,OAAQ0W,EAAR,YAAa1W,EAAb,YAAkBqQ,EAAlB,YAAuBsG,EAAvB,cACGD,EAAI,EADP,YAIL3Y,EAAM,SAGFgS,EAFM,MAAN2G,EACQ,MAAN1W,EACI,KAAH,OAAQ0W,EAAR,YAAa1W,EAAb,YAAkBqQ,GAAlB,OACA0G,EADA,aACML,EADN,YACW1W,EADX,aACiBqQ,EAAI,EADrB,MAGG,KAAH,OAAQqG,EAAR,YAAa1W,EAAb,YAAkBqQ,GAAlB,OACA0G,EADA,aACML,EADN,aACY1W,EAAI,EADhB,QAIC,KAAH,OAAQ0W,EAAR,YAAa1W,EAAb,YAAkBqQ,EAAlB,cACGqG,EAAI,EADP,WAKP3Y,EAAM,eAAgBgS,GACfA,MAILmG,EAAiB,SAAC/W,EAAMZ,GAE5B,OADAR,EAAM,iBAAkBoB,EAAMZ,GACvBY,EAAKsR,MAAM,OAAOxD,KAAI,SAAC9N,GAC5B,OAAO6X,EAAc7X,EAAMZ,MAC1BiS,KAAK,MAGJwG,EAAgB,SAAC7X,EAAMZ,GAC3BY,EAAOA,EAAKuK,OACZ,IAAM/J,EAAIpB,EAAQC,MAAQoB,EAAGC,EAAEoX,aAAerX,EAAGC,EAAEqX,QACnD,OAAO/X,EAAKwK,QAAQhK,GAAG,SAACoQ,EAAKoH,EAAMT,EAAG1W,EAAGqQ,EAAGsG,GAC1C5Y,EAAM,SAAUoB,EAAM4Q,EAAKoH,EAAMT,EAAG1W,EAAGqQ,EAAGsG,GAC1C,IAAMS,EAAKhB,EAAIM,GACTW,EAAKD,GAAMhB,EAAIpW,GACfsX,EAAKD,GAAMjB,EAAI/F,GACfkH,EAAOD,EA8Db,MA5Da,MAATH,GAAgBI,IAClBJ,EAAO,IAKTR,EAAKpY,EAAQgC,kBAAoB,KAAO,GAEpC6W,EAGArH,EAFW,MAAToH,GAAyB,MAATA,EAEZ,WAGA,IAECA,GAAQI,GAGbF,IACFrX,EAAI,GAENqQ,EAAI,EAES,MAAT8G,GAGFA,EAAO,KACHE,GACFX,GAAKA,EAAI,EACT1W,EAAI,EACJqQ,EAAI,IAEJrQ,GAAKA,EAAI,EACTqQ,EAAI,IAEY,OAAT8G,IAGTA,EAAO,IACHE,EACFX,GAAKA,EAAI,EAET1W,GAAKA,EAAI,GAIA,MAATmX,IACFR,EAAK,MAEP5G,EAAM,GAAH,OAAMoH,EAAOT,EAAb,YAAkB1W,EAAlB,YAAuBqQ,GAAvB,OAA2BsG,IACrBU,EACTtH,EAAM,KAAH,OAAQ2G,EAAR,eAAgBC,EAAhB,cAAwBD,EAAI,EAA5B,UACMY,IACTvH,EAAM,KAAH,OAAQ2G,EAAR,YAAa1W,EAAb,aAAmB2W,EAAnB,aACED,EADF,aACQ1W,EAAI,EADZ,SAILjC,EAAM,gBAAiBgS,GAEhBA,MAMLoG,EAAe,SAAChX,EAAMZ,GAG1B,OAFAR,EAAM,eAAgBoB,EAAMZ,GAErBY,EAAKuK,OAAOC,QAAQ/J,EAAGC,EAAE2X,MAAO,KAGnCtC,EAAc,SAAC/V,EAAMZ,GAEzB,OADAR,EAAM,cAAeoB,EAAMZ,GACpBY,EAAKuK,OACTC,QAAQ/J,EAAGrB,EAAQgC,kBAAoBV,EAAE4X,QAAU5X,EAAE6X,MAAO,KAQ3DlD,EAAgB,SAAAmD,GAAK,OAAI,SAACC,EAC9B/H,EAAMgI,EAAIC,EAAIC,EAAIC,EAAKC,EACvBnI,EAAIoI,EAAIC,EAAIC,EAAIC,EAAKC,GA2BrB,OAzBEzI,EADEuG,EAAIyB,GACC,GACEzB,EAAI0B,GACN,KAAH,OAAQD,EAAR,eAAiBF,EAAQ,KAAO,IAC3BvB,EAAI2B,GACN,KAAH,OAAQF,EAAR,YAAcC,EAAd,aAAqBH,EAAQ,KAAO,IAC/BK,EACF,KAAH,OAAQnI,GAEL,KAAH,OAAQA,GAAR,OAAe8H,EAAQ,KAAO,IAIlC7H,EADEsG,EAAI8B,GACD,GACI9B,EAAI+B,GACR,IAAH,QAAQD,EAAK,EAAb,UACO9B,EAAIgC,GACR,IAAH,OAAOF,EAAP,aAAcC,EAAK,EAAnB,QACOE,EACJ,KAAH,OAAQH,EAAR,YAAcC,EAAd,YAAoBC,EAApB,YAA0BC,GACnBV,EACJ,IAAH,OAAOO,EAAP,YAAaC,EAAb,aAAoBC,EAAK,EAAzB,MAEG,KAAH,OAAQtI,GAGL,UAAID,EAAJ,YAAYC,GAAMpG,SAGrBkM,EAAU,SAACxT,EAAK1C,EAASnB,GAC7B,IAAK,IAAI2D,EAAI,EAAGA,EAAIE,EAAIK,OAAQP,IAC9B,IAAKE,EAAIF,GAAGhE,KAAKwB,GACf,OAAO,EAIX,GAAIA,EAAQ6I,WAAW9F,SAAWlE,EAAQgC,kBAAmB,CAM3D,IAAK,IAAI2B,EAAI,EAAGA,EAAIE,EAAIK,OAAQP,IAE9B,GADAnE,EAAMqE,EAAIF,GAAG1C,QACT4C,EAAIF,GAAG1C,SAAWN,EAAWF,KAI7BoD,EAAIF,GAAG1C,OAAO+I,WAAW9F,OAAS,EAAG,CACvC,IAAM8V,EAAUnW,EAAIF,GAAG1C,OACvB,GAAI+Y,EAAQnQ,QAAU1I,EAAQ0I,OAC1BmQ,EAAQlQ,QAAU3I,EAAQ2I,OAC1BkQ,EAAQjQ,QAAU5I,EAAQ4I,MAC5B,OAAO,EAMb,OAAO,EAGT,OAAO,I,oBC5fT,IAAQxK,EAA8Be,EAAQ,MAAtCf,0BACFC,EAAQc,EAAQ,MAIhBe,GAHNjC,EAAUD,EAAOC,QAAU,IAGRiC,GAAK,GAClBkI,EAAMnK,EAAQmK,IAAM,GACpBjI,EAAIlC,EAAQkC,EAAI,GAClB2Y,EAAI,EAEFC,EAAc,SAACC,EAAMrZ,EAAOsZ,GAChC,IAAM/N,EAAQ4N,IACdza,EAAM6M,EAAOvL,GACbQ,EAAE6Y,GAAQ9N,EACV9C,EAAI8C,GAASvL,EACbO,EAAGgL,GAAS,IAAIgO,OAAOvZ,EAAOsZ,EAAW,SAAMxY,IASjDsY,EAAY,oBAAqB,eACjCA,EAAY,yBAA0B,UAMtCA,EAAY,uBAAwB,8BAKpCA,EAAY,cAAe,WAAI3Q,EAAIjI,EAAEgZ,mBAAV,mBACJ/Q,EAAIjI,EAAEgZ,mBADF,mBAEJ/Q,EAAIjI,EAAEgZ,mBAFF,MAI3BJ,EAAY,mBAAoB,WAAI3Q,EAAIjI,EAAEiZ,wBAAV,mBACJhR,EAAIjI,EAAEiZ,wBADF,mBAEJhR,EAAIjI,EAAEiZ,wBAFF,MAOhCL,EAAY,uBAAD,aAA+B3Q,EAAIjI,EAAEgZ,mBAArC,YACP/Q,EAAIjI,EAAEkZ,sBADC,MAGXN,EAAY,4BAAD,aAAoC3Q,EAAIjI,EAAEiZ,wBAA1C,YACPhR,EAAIjI,EAAEkZ,sBADC,MAOXN,EAAY,aAAD,eAAuB3Q,EAAIjI,EAAEmZ,sBAA7B,iBACFlR,EAAIjI,EAAEmZ,sBADJ,SAGXP,EAAY,kBAAD,gBAA6B3Q,EAAIjI,EAAEoZ,2BAAnC,iBACFnR,EAAIjI,EAAEoZ,2BADJ,SAMXR,EAAY,kBAAmB,iBAM/BA,EAAY,QAAD,iBAAoB3Q,EAAIjI,EAAEqZ,iBAA1B,iBACFpR,EAAIjI,EAAEqZ,iBADJ,SAYXT,EAAY,YAAD,YAAmB3Q,EAAIjI,EAAEsZ,cAAzB,OACRrR,EAAIjI,EAAEuZ,YADE,YAETtR,EAAIjI,EAAEwZ,OAFG,MAIXZ,EAAY,OAAD,WAAa3Q,EAAIjI,EAAEyZ,WAAnB,MAKXb,EAAY,aAAD,kBAA0B3Q,EAAIjI,EAAE0Z,mBAAhC,OACRzR,EAAIjI,EAAE2Z,iBADE,YAET1R,EAAIjI,EAAEwZ,OAFG,MAIXZ,EAAY,QAAD,WAAc3Q,EAAIjI,EAAE4Z,YAApB,MAEXhB,EAAY,OAAQ,gBAKpBA,EAAY,wBAAD,UAA6B3Q,EAAIjI,EAAEiZ,wBAAnC,aACXL,EAAY,mBAAD,UAAwB3Q,EAAIjI,EAAEgZ,mBAA9B,aAEXJ,EAAY,cAAe,mBAAY3Q,EAAIjI,EAAE6Z,kBAAlB,sBACE5R,EAAIjI,EAAE6Z,kBADR,sBAEE5R,EAAIjI,EAAE6Z,kBAFR,kBAGF5R,EAAIjI,EAAEuZ,YAHJ,aAINtR,EAAIjI,EAAEwZ,OAJA,aAO3BZ,EAAY,mBAAoB,mBAAY3Q,EAAIjI,EAAE8Z,uBAAlB,sBACE7R,EAAIjI,EAAE8Z,uBADR,sBAEE7R,EAAIjI,EAAE8Z,uBAFR,kBAGF7R,EAAIjI,EAAE2Z,iBAHJ,aAIN1R,EAAIjI,EAAEwZ,OAJA,aAOhCZ,EAAY,SAAD,WAAe3Q,EAAIjI,EAAE+Z,MAArB,eAAiC9R,EAAIjI,EAAEga,aAAvC,MACXpB,EAAY,cAAD,WAAoB3Q,EAAIjI,EAAE+Z,MAA1B,eAAsC9R,EAAIjI,EAAEia,kBAA5C,MAIXrB,EAAY,SAAU,UAAG,qBAAH,OACI3a,EADJ,6BAEQA,EAFR,+BAGQA,EAHR,wBAKtB2a,EAAY,YAAa3Q,EAAIjI,EAAEiL,SAAS,GAIxC2N,EAAY,YAAa,WAEzBA,EAAY,YAAD,gBAAuB3Q,EAAIjI,EAAEka,WAA7B,SAA+C,GAC1Dpc,EAAQiX,iBAAmB,MAE3B6D,EAAY,QAAD,WAAc3Q,EAAIjI,EAAEka,YAApB,OAAiCjS,EAAIjI,EAAEga,aAAvC,MACXpB,EAAY,aAAD,WAAmB3Q,EAAIjI,EAAEka,YAAzB,OAAsCjS,EAAIjI,EAAEia,kBAA5C,MAIXrB,EAAY,YAAa,WAEzBA,EAAY,YAAD,gBAAuB3Q,EAAIjI,EAAEma,WAA7B,SAA+C,GAC1Drc,EAAQmX,iBAAmB,MAE3B2D,EAAY,QAAD,WAAc3Q,EAAIjI,EAAEma,YAApB,OAAiClS,EAAIjI,EAAEga,aAAvC,MACXpB,EAAY,aAAD,WAAmB3Q,EAAIjI,EAAEma,YAAzB,OAAsClS,EAAIjI,EAAEia,kBAA5C,MAGXrB,EAAY,kBAAD,WAAwB3Q,EAAIjI,EAAE+Z,MAA9B,gBAA2C9R,EAAIjI,EAAE4Z,YAAjD,UACXhB,EAAY,aAAD,WAAmB3Q,EAAIjI,EAAE+Z,MAAzB,gBAAsC9R,EAAIjI,EAAEyZ,WAA5C,UAIXb,EAAY,iBAAD,gBAA4B3Q,EAAIjI,EAAE+Z,MAAlC,gBACH9R,EAAIjI,EAAE4Z,YADH,YACkB3R,EAAIjI,EAAEga,aADxB,MACyC,GACpDlc,EAAQ+W,sBAAwB,SAMhC+D,EAAY,cAAe,gBAAS3Q,EAAIjI,EAAEga,aAAf,4BAEJ/R,EAAIjI,EAAEga,aAFF,cAK3BpB,EAAY,mBAAoB,gBAAS3Q,EAAIjI,EAAEia,kBAAf,4BAEJhS,EAAIjI,EAAEia,kBAFF,cAMhCrB,EAAY,OAAQ,mBAEpBA,EAAY,OAAQ,yBACpBA,EAAY,UAAW,4B,oBCrLvB,IAAO5a,EAAcgB,EAAQ,MAAtBhB,WACP,EAAkBgB,EAAQ,KAAlBe,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,EACNO,EAASvB,EAAQ,KAEjBO,EAAeP,EAAQ,MA4B7BnB,EAAOC,QA3BO,SAAC+B,EAASnB,GAGtB,GAFAA,EAAUa,EAAab,GAEnBmB,aAAmBU,EACrB,OAAOV,EAGT,GAAuB,kBAAZA,EACT,OAAO,KAGT,GAAIA,EAAQ+C,OAAS5E,EACnB,OAAO,KAIT,KADUU,EAAQC,MAAQoB,EAAGC,EAAEsT,OAASvT,EAAGC,EAAEuT,OACtClV,KAAKwB,GACV,OAAO,KAGT,IACE,OAAO,IAAIU,EAAOV,EAASnB,GAC3B,MAAO8B,GACP,OAAO","file":"static/js/32.b1af3ce9.chunk.js","sourcesContent":["// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true\n    return options\n  }, {})\nmodule.exports = parseOptions\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst {re, t} = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers\n}\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst {ANY} = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// @flow\n\nimport semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\n\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nconst devices = {\n  blue: {\n    id: \"blue\",\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    blockSize: 4 * 1024,\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  nanoS: {\n    id: \"nanoS\",\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    blockSize: 4 * 1024,\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion), \"2.0.0\") ? 4 * 1024 : 2 * 1024,\n  },\n  nanoX: {\n    id: \"nanoX\",\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    blockSize: 4 * 1024,\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        // this is the legacy one (prototype version). we will eventually drop it.\n        serviceUuid: \"d973f2e0-b19e-11e2-9e96-0800200c9a66\",\n        notifyUuid: \"d973f2e1-b19e-11e2-9e96-0800200c9a66\",\n        writeUuid: \"d973f2e2-b19e-11e2-9e96-0800200c9a66\",\n      },\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: \"blue\",\n  \"Nano S\": \"nanoS\",\n  \"Nano X\": \"nanoX\",\n};\n\n// $FlowFixMe\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (usbProductId: number): ?DeviceModel => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (productName: string): ?DeviceModel => {\n  const productId = productMap[productName];\n  const deviceModel = devicesList.find((d) => d.id === productId);\n\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: {\n  [_: string]: BluetoothInfos,\n} = {};\n\nfor (let id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = { deviceModel, ...spec };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = () => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (uuid: string): ?BluetoothInfos =>\n  serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport type DeviceModelId = $Keys<typeof devices>;\n\n/**\n *\n */\nexport type DeviceModel = {\n  id: DeviceModelId,\n  productName: string,\n  productIdMM: number,\n  legacyUsbProductId: number,\n  usbOnly: boolean,\n  memorySize: number,\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number,\n  bluetoothSpec?: Array<{\n    serviceUuid: string,\n    writeUuid: string,\n    notifyUuid: string,\n  }>,\n};\n\n/**\n *\n */\nexport type BluetoothInfos = {\n  deviceModel: DeviceModel,\n  serviceUuid: string,\n  writeUuid: string,\n  notifyUuid: string,\n};\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","//@flow\nimport Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  TransportInterfaceNotAvailable,\n  TransportWebUSBGestureRequired,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n} from \"@ledgerhq/errors\";\nimport {\n  getLedgerDevices,\n  getFirstLedgerDevice,\n  requestLedgerDevice,\n  isSupported,\n} from \"./webusb\";\n\nconst configurationValue = 1;\nconst endpointNumber = 3;\n\n/**\n * WebUSB Transport implementation\n * @example\n * import TransportWebUSB from \"@ledgerhq/hw-transport-webusb\";\n * ...\n * TransportWebUSB.create().then(transport => ...)\n */\nexport default class TransportWebUSB extends Transport<USBDevice> {\n  device: USBDevice;\n  deviceModel: ?DeviceModel;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n  interfaceNumber: number;\n\n  constructor(device: USBDevice, interfaceNumber: number) {\n    super();\n    this.device = device;\n    this.interfaceNumber = interfaceNumber;\n    this.deviceModel = identifyUSBProductId(device.productId);\n  }\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<USBDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!unsubscribed) {\n          const deviceModel = identifyUSBProductId(device.productId);\n          observer.next({ type: \"add\", descriptor: device, deviceModel });\n          observer.complete();\n        }\n      },\n      (error) => {\n        if (\n          window.DOMException &&\n          error instanceof window.DOMException &&\n          error.code === 18\n        ) {\n          observer.error(new TransportWebUSBGestureRequired(error.message));\n        } else {\n          observer.error(new TransportOpenUserCancelled(error.message));\n        }\n      }\n    );\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n    return { unsubscribe };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const device = await requestLedgerDevice();\n    return TransportWebUSB.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebUSB.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a USBDevice\n   */\n  static async open(device: USBDevice) {\n    await device.open();\n    if (device.configuration === null) {\n      await device.selectConfiguration(configurationValue);\n    }\n    const iface = device.configurations[0].interfaces.find(({ alternates }) =>\n      alternates.some((a) => a.interfaceClass === 255)\n    );\n    if (!iface) {\n      throw new TransportInterfaceNotAvailable(\n        \"No WebUSB interface found for your Ledger device. Please upgrade firmware or contact techsupport.\"\n      );\n    }\n    const interfaceNumber = iface.interfaceNumber;\n    try {\n      await device.claimInterface(interfaceNumber);\n    } catch (e) {\n      await device.close();\n      throw new TransportInterfaceNotAvailable(e.message);\n    }\n    const transport = new TransportWebUSB(device, interfaceNumber);\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        // $FlowFixMe\n        navigator.usb.removeEventListener(\"disconnect\", onDisconnect);\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n    // $FlowFixMe\n    navigator.usb.addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    await this.device.releaseInterface(this.interfaceNumber);\n    await gracefullyResetDevice(this.device);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = (apdu: Buffer): Promise<Buffer> =>\n    this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n\n      const framing = hidFraming(channel, packetSize);\n\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.transferOut(endpointNumber, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n      while (!(result = framing.getReducedResult(acc))) {\n        const r = await this.device.transferIn(endpointNumber, packetSize);\n        const buffer = Buffer.from(r.data.buffer);\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"disconnected\")) {\n        this._emitDisconnect(e);\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n      throw e;\n    });\n\n  setScrambleKey() {}\n}\n\nasync function gracefullyResetDevice(device: USBDevice) {\n  try {\n    await device.reset();\n  } catch (err) {\n    console.warn(err);\n  }\n}\n","// @flow\n\nimport { TransportError } from \"@ledgerhq/errors\";\n\nexport type ResponseAcc = ?{\n  data: Buffer,\n  dataLength: number,\n  sequence: number,\n};\n\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n\n      const blocks = [];\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): ?Buffer {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(version, options).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst {re, t} = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null)\n    return null\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin)))\n      minver = setMin\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let min = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!min)\n        min = version\n    } else {\n      if (prev) {\n        set.push([min, prev])\n      }\n      prev = null\n      min = null\n    }\n  }\n  if (min)\n    set.push([min, null])\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max)\n      ranges.push(min)\n    else if (!max && min === v[0])\n      ranges.push('*')\n    else if (!max)\n      ranges.push(`>=${min}`)\n    else if (min === v[0])\n      ranges.push(`<=${max}`)\n    else\n      ranges.push(`${min} - ${max}`)\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom)\n    return true\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub)\n        continue OUTER\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull)\n      return false\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom)\n    return true\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY)\n      return true\n    else if (options.includePrerelease)\n      sub = [ new Comparator('>=0.0.0-0') ]\n    else\n      sub = [ new Comparator('>=0.0.0') ]\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease)\n      return true\n    else\n      dom = [ new Comparator('>=0.0.0') ]\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=')\n      gt = higherGT(gt, c, options)\n    else if (c.operator === '<' || c.operator === '<=')\n      lt = lowerLT(lt, c, options)\n    else\n      eqSet.add(c.semver)\n  }\n\n  if (eqSet.size > 1)\n    return null\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0)\n      return null\n    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))\n      return null\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options))\n      return null\n\n    if (lt && !satisfies(eq, String(lt), options))\n      return null\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options))\n        return false\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt)\n          return false\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))\n        return false\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt)\n          return false\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))\n        return false\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0)\n      return false\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0)\n    return false\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0)\n    return false\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre)\n    return false\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a)\n    return b\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","// @flow\nimport { ledgerUSBVendorId } from \"@ledgerhq/devices\";\n\nconst ledgerDevices = [{ vendorId: ledgerUSBVendorId }];\n\nexport async function requestLedgerDevice(): Promise<USBDevice> {\n  // $FlowFixMe\n  const device = await navigator.usb.requestDevice({ filters: ledgerDevices });\n  return device;\n}\n\nexport async function getLedgerDevices(): Promise<USBDevice[]> {\n  // $FlowFixMe\n  const devices = await navigator.usb.getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nexport async function getFirstLedgerDevice(): Promise<USBDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  return requestLedgerDevice();\n}\n\nexport const isSupported = (): Promise<boolean> =>\n  Promise.resolve(\n    !!navigator &&\n      // $FlowFixMe\n      !!navigator.usb &&\n      typeof navigator.usb.getDevices === \"function\"\n  );\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split(/\\s*\\|\\|\\s*/)\n      // map the range to a 2d array of comparators\n      .map(range => this.parseRange(range.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0)\n        this.set = [first]\n      else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached)\n      return cached\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n      // in loose mode, throw out any that are not valid comparators\n      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)\n      .map(comp => new Comparator(comp, this.options))\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const l = rangeList.length\n    const rangeMap = new Map()\n    for (const comp of rangeList) {\n      if (isNullSet(comp))\n        return [comp]\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has(''))\n      rangeMap.delete('')\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceTilde(comp, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((comp) => {\n    return replaceCaret(comp, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((comp) => {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<')\n        pr = '-0'\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$')\n","const {MAX_LENGTH} = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n"],"sourceRoot":""}